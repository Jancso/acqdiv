[corpus]
iso639-3 == cre
glottolog_code == cree1272
format == JSON
testformat == ChatXML
# format == ChatXML
language == Cree
corpus == Cree
owner == Julie Brittain

[paths]
sessions == ../corpora/Cree/json/*.json
testSessions == ../corpora/test/Cree.xml
sessionsTest_dir == ../corpora/test/
sessions_dir == ../corpora/Cree/json/
metadata_dir == ../corpora/Cree/xml/

[metadata]
# TODO: parse from the XML eventually
# type == XML
type == JSON
cdc == yes
cdc_path == corpora/Cree/cha/0metadata.cdc

[speaker_labels]
id == speaker_label
name == name
age == age_raw
role == role_raw
sex == gender_raw
birthday == birthdate

[session_labels]
Date == date
Id == source_id
Media == media
Mediatypes == media_type

[json_mappings_utterance]
utterance_id == utterance_id
speaker_id == speaker_label
starts_at == start_raw
ends_at == end_raw
english == translation
comments == comment
sentence_type == sentence_type
warnings == warning

[json_mappings_words]
full_word == word_actual
full_word_target == word_target
warnings == warning
# assign the proper actual vs target "word" given the corpus
word == word_actual

[morphemes]
# Cree makes a distinction actual and target segment; see acqdiv manual
type == target

[json_mappings_morphemes]
segments_target == morpheme
glosses_target == gloss_raw
pos_target == pos_raw

[gloss]
Eng == ENG
final == STEM
3 == 3
p.polar == Q
1 == 1
2s.IMP == IMP.2SG
1/2 == 1/2
2 == 2
? == ???
0 == 0
TI.theme.sign == TR.INAN
final.0 == STEM.0
p.intj == INTJ
dim == DIM
2s == 2SG
3>4 == 3>4
loc == LOC
TA.theme.sign == TR.AN
1s == 1SG
pl == PL
inchoative == INCH
future == FUT
3s == 3SG
obv == OBV
dem+G.pxl == DEM.PROX
TI.theme == TR.INAN
Intj == INTJ
final.1/2 == STEM.1/2
1>3 == 1>3
pvb.conj ==
p.hesitate == uh
p.hesitat == uh
p.focus == FOC
2>1.IMP == IMP.2>1
p.neg == NEG
p.emph == EMPH
ni == 1
medial == STEM
final.3 == STEM.3
causative == CAUS
3pl == 3PL
2>3 == 2>3
21.pl == 2PL.INCL
p.quest == Q
past == PST
initial == STEM
fut == FUT
function == STEM
direct == DIR
3.s == 3SG
3>1.IMP == IMP.3>1
21pl.IMP == 2PL.INCL
vti.final == STEM.TR.INAN
theme.sign == TR.AN.DIR
preverb == PREV
poss == POSS
p.dem == DEM
p.aff == yes
p == DEM
Ø.IMP == IMP
Obv == OBV
Ø == 3SG>0
1pl == 1PL
incl == INCL
inverse == INV
inan.pl == INAN.PL
future.3 == FUT.3
Future == FUT
FUT == FUT
fina; == STEM
English == ENG
?Eng == ?ENG
comp == COMP
3.pl == 3PL
3>2 == 3>2
3/0 == 3/0
2.pl.IMP == IMP.2PL.EXCL
2pl == 2PL.EXCL
1>2 == 1>2
0.s == 0
not == NEG

[peculiarities]
# might use this kind of mapping for XML parsing
# <u who="">
# <media start="" end="">
# <actual>
# <model>
# <ss>, <ph>
# <a type="english translation">
# <a type="comments">
# <t>
# <w>
# <a type="extension" flavor="mortyp">
# <a type="extension" flavor="tarmor">
# <a type="extension" flavor="mormea">
# <a type="extension" flavor="actmor">

[regex]
'\+' == '.'
',' ==  '.'
