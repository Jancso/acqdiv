# -*- coding: utf-8 -*-

import os
import sys

current_dir = os.getcwd()
sys.path.append(current_dir)

import database_backend as db
import processors as processors
import postprocessor as pp
import unittest
from sqlalchemy.orm import sessionmaker
from sqlalchemy import func
import parsers as parsers


# helper functions
def connect():
    """ Performs database connection. We can add a database settings
    from settings.py later. Returns sqlalchemy engine instance.
    """
    return db.create_engine('sqlite:///tests/test_xml_acqdiv.sqlite3', echo=False)

def make_session():
    engine = connect()
    Session = sessionmaker(bind=engine)
    session = Session()
    return session

def load_database(configs, engine):
    db.create_tables(engine)

    for config in configs:
        # Parse the config file and call the sessions processor
        cfg = parsers.CorpusConfigParser()
        cfg.read(config)
        cfg.set('paths', 'sessions', cfg['tests']['sessions'])
        cfg.set('paths', 'sessions_dir', cfg['tests']['sessions_dir'])
        cfg.set('paths', 'metadata_dir', cfg['tests']['metadata_dir'])
        cfg.set('corpus', 'format', cfg['tests']['format'])
        print(cfg.session_files)

        # Process by parsing the files and adding extracted data to the db
        c = processors.CorpusProcessor(cfg, engine)
        c.process_corpus()
        
        print("Postprocessing database entries for {0}...".format(config.split(".")[0]))
        pp.update_age(cfg, engine)
        pp.unify_glosses(cfg, engine)

class XMLTest(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        # Initialize database connection and drop and then create tables on each call.
        # http://docs.sqlalchemy.org/en/latest/orm/session_basics.html#session-faq-whentocreate
        engine = connect()

        cls.configs = ['Cree.ini', 'Inuktitut.ini', 'Japanese_Miyata.ini', 'Japanese_MiiPro.ini', 'Sesotho.ini', 'Turkish.ini', 'Yucatec.ini']
        
        load_database(cls.configs, engine)
    

    def testXMLSessions(self):
        """
        Test if sessions for XML test files are loaded
        """
        session = make_session()
        self.assertEqual(len(session.query(func.count(db.Session.corpus), db.Session.corpus).group_by(db.Session.corpus).all()), len(XMLTest.configs))
        s = select([db.Session])
        result = session.execute(s)
        self.assertEqual(str(result.fetchall()), "[(1, 'Cree', 'Cree', 'Cree', '2005-03-25', 'Cree', 'Cree', 'video'), (2, 'Inuktitut', 'Inuktitut', 'Inuktitut', '1989-03-03', 'Inuktitut', 'Inuktitut', 'video unlinked'), (3, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', '1989-03-06', 'Japanese_Miyata', 'Miyata-Aki', None), (4, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', '1984-01-01', 'Japanese_MiiPro', 'Japanese_MiiPro', None), (5, 'Sesotho', 'Sesotho', 'Sesotho', '1984-01-01', 'Sesotho', 'Sesotho', 'audio'), (6, 'Turkish', 'Turkish_KULLD', 'Turkish', '2002-05-23', 'Turkish', 'Turkish_KULLD', 'video'), (7, 'Yucatec', 'Yucatec', 'Yucatec', '1996-01-03', 'Yucatec', None, None)]")
        session.close()
        
        
    def testXMLUtterances(self):
        """
        Test if all utterances for XML test files are loaded
        """
        session = make_session()
        self.assertEqual(session.query(db.Utterance).count(), 104)
        
        s_cree = select([db.Utterance], and_(db.Utterance.corpus=="Cree"))
        s_inuk = select([db.Utterance], and_(db.Utterance.corpus=="Inuktitut"))
        s_jap_mii = select([db.Utterance], and_(db.Utterance.corpus=="Japanese_MiiPro"))
        s_jap_miy = select([db.Utterance], and_(db.Utterance.corpus=="Japanese_Miyata"))
        s_seso = select([db.Utterance], and_(db.Utterance.corpus=="Sesotho"))
        s_turk = select([db.Utterance], and_(db.Utterance.corpus=="Turkish_KULLD"))
        s_yuc = select([db.Utterance], and_(db.Utterance.corpus=="Yucatec"))
        result_cree = session.execute(s_cree)
        result_inuk = session.execute(s_inuk)
        result_jap_mii = session.execute(s_jap_mii)
        result_jap_miy = session.execute(s_jap_miy)
        result_seso = session.execute(s_seso)
        result_turk = session.execute(s_turk)
        result_yuc = session.execute(s_yuc)
        
        self.assertEqual(str(result_cree.fetchall()), "[(1, 'Cree', 'Cree', 'Cree', 'u700', 'p29', None, 'mîn kiyâ îhî', 'mîn kiyâ îhî', 'aɡain yes', 'default', '1766.677', '1769.208', '1766.677', '1769.208', 'mîn kiyâ îhî', None, None, None, \"(KT) DB calls this record #366. The interlocutor has just asked 'Again?' in Cree.\", None), (2, 'Cree', 'Cree', 'Cree', 'u701', 'p29', None, 'kiyâ', 'kiyâ', 'aɡain', 'default', '1769.209', '1776.990', '1769.209', '1776.990', 'kiyâ', None, None, None, 'JB: changed actual from [%%% eˈɡa] to [eˈɡa] , and target from [min ɡa] to [ɡa] ; this entyr would have been \"mîn kiyâ\" [min ɡa], \"also\", but we cannot hear Ani to transcribe both words; (KT) I suggest that [e] in the IPA Actual corresponds to \'mîn\' in the target. [min] should, therefore, be added back into the IPA Target field.', \"broken alignment full_word : segments; broken alignment between morphology tiers - word numbers don't match. Checkpos_target; broken alignment between morphology tiers - word numbers don't match. Checkglosses_target; broken alignment between morphology tiers - word numbers don't match. Checksegments_target\"), (3, 'Cree', 'Cree', 'Cree', 'u702', 'p30', None, 'Nuwich uwiitaayimaa', 'Nuwich uwiitaayimaa', 'She’s finding her funny', 'default', '1773.610', '1775.489', '1773.610', '1775.489', 'Nuwich uwiitaayimaa', None, None, None, None, 'not glossed'), (4, 'Cree', 'Cree', 'Cree', 'u704', 'p30', None, 'Miin aa', 'Miin aa', 'Again?', 'default', '1777.829', '1779.185', '1777.829', '1779.185', 'Miin aa', None, None, None, None, 'not glossed'), (5, 'Cree', 'Cree', 'Cree', 'u705', 'p29', None, 'mîn kiyâ', 'mîn kiyâ', 'again', 'default', '1779.429', '1783.738', '1779.429', '1783.738', 'mîn kiyâ', None, None, None, '(KT) DB calls this record #369.', None), (6, 'Cree', 'Cree', 'Cree', 'u707', 'p29', None, 'mâu', 'mâu', 'this', 'default', '1805.971', '1808.556', '1805.971', '1808.556', 'mâu', None, None, None, '(KT) DB calls this record #371.', None), (7, 'Cree', 'Cree', 'Cree', 'u710', 'p30', None, 'Aakuu maak aa naatihwaahtaau aai', 'Aakuu maak aa naatihwaahtaau aai', 'It’s enough ok let’s go get…', 'default', '1814.391', '1816.356', '1814.391', '1816.356', 'Aakuu maak aa naatihwaahtaau aai', None, None, None, None, 'not glossed'), (8, 'Cree', 'Cree', 'Cree', 'u706', 'p29', None, 'two', 'two', None, 'default', '1801.968', '1805.970', '1801.968', '1805.970', 'two', None, None, None, \"(ED) Can't pick out; JB: changed actual from [%%% ˈʧə̃] to [ˈʧə̃] ; (KT) DB calls this record #370. Initially, DB says that she does not understand but then says that she thinks that Ani says 'two'.\", None), (9, 'Cree', 'Cree', 'Cree', 'u703', 'p29', None, 'tv', 'tv', None, 'default', '1776.991', '1779.428', '1776.991', '1779.428', 'tv', None, None, None, '(KT) DB calls this record #368.', None), (10, 'Cree', 'Cree', 'Cree', 'u708', 'p29', None, '???', '???', None, 'default', '1808.557', '1812.545', '1808.557', '1812.545', '???', None, None, None, \"JB: deleted %%% from target and translation; delete actual?; (KT) DB calls this record #372. She says that she does not understand Ani's production.\", 'broken alignment full_word : segments'), (11, 'Cree', 'Cree', 'Cree', 'u709', 'p30', None, '???', '???', None, 'default', '1810.490', '1811.553', '1810.490', '1811.553', '???', None, None, None, 'Translation missing', 'not glossed')]")
        self.assertEqual(str(result_inuk.fetchall()), "[(12, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u702', 'LOU', 'SHA', 'here shanley have a plate', 'here shanley have a plate', 'here shanley. have a plate.', 'default', '3386.000', None, '0:56:26', None, 'here shanley have a plate', None, None, None, None, 'not glossed'), (13, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u705', 'ALI', 'DAN', 'aunatakka', 'aunatakka', \"it's this one here.\", 'default', '3399.000', None, '0:56:39', None, 'aunatakka', None, None, None, 'points at a piece of meat', None), (14, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u706', 'ALI', 'ALI', 'una', 'una', 'this one.', 'default', '3401.000', None, '0:56:41', None, 'una', None, None, None, None, None), (15, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u707', 'ALI', 'ALI', 'una', 'una', 'this one.', 'default', '3402.000', None, '0:56:42', None, 'una', None, None, None, None, None), (16, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u710', 'MAR', 'JUP', 'tursuniitu qimmianirtisijuruluulirtu', 'tursuniitu qimmianirtisijuruluulirtu', '<he is letting> [?] the porch smell like a dog.', 'default', '1279.000', None, '00:21:19', None, 'tursuniitu qimmianirtisijuruluulirtu', None, None, None, 'COR', 'not glossed'), (17, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u711', 'DAN', 'ALI', 'angijuaa', 'angijuaa', 'the big one .', 'default', '1628.000', None, '0:27:08', None, 'angijuaa', None, None, None, None, 'not glossed; not glossed'), (18, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u703', 'ALI', 'LOU', '???tutusivunga', '???tutusivunga', \"xxx-I'm having some.\", 'default', '3389.000', None, '0:56:29', None, '???tutusivunga', None, None, None, '$CHK:u', None), (19, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u714', 'ALI', 'DAN', '??? ???mat mat??? ???mat???', '??? ???mat mat??? ???mat???', None, 'default', '310.000', None, '00:05:10', None, '??? ???mat mat??? ???mat???', None, None, None, 'commenting on the keyboard with the plug', 'not glossed'), (20, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u704', 'ALI', 'DAN', 'un anna', 'un anna', 'this one.', 'default', '3396.000', None, '0:56:36', None, 'un anna', None, None, None, None, None), (21, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u708', 'JUP', 'MAR', '', '', '0 [=! whining].', 'action', '1905.000', None, '0:31:45', None, '', None, None, None, 'complaining and still unhappy about not being able to go outside; COR', 'empty utterance; not glossed'), (22, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u709', 'ALI', 'himself', None, None, '0 [=!singing] .', 'action', '146.000', None, '0:02:26', None, None, None, None, None, None, 'empty utterance; not glossed'), (23, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u712', 'JUP', 'SLF', 'Qangattajuuraaluk', 'Qangattajuuraaluk', 'Big airplane !', 'exclamation', '160.000', None, '00:02:40', None, 'Qangattajuuraaluk', None, None, None, None, 'not glossed'), (24, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u713', 'ALI', 'DAN', 'nauk ???', 'nauk ???', \"Let's see xxx .\", 'default', '262.000', None, '00:04:22', None, 'nauk ???', None, None, None, None, None), (25, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u715', 'ALI', 'LOU', 'av uvanga', 'av uvanga', 'it belongs to me .', 'default', '702.000', None, '00:11:42', None, 'av uvanga', None, None, None, None, None), (26, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u716', 'ALI', 'DAN', '???', '???', 'xxx [=? that is mine] .', 'default', '494.000', None, '00:08:14', None, '???', None, None, None, 'speaking very softly; difficult to understand; $CHK:c', None), (27, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u717', 'ALI', 'LOU', 'avungaunna', 'avungaunna', 'it comes from there .', 'default', '705.000', None, '00:11:45', None, 'avungaunna', None, None, None, None, 'gloss insecure'), (28, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u718', 'JUP', 'ITT', 'Shaamiitumi', 'Shaamiitumi', 'At the (side)-table ...', 'trail off', '585.000', None, '00:09:45', None, 'Shaamiitumi', None, None, None, \"JUP's talking about the tool he took from the sideandtable.\", None), (29, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u719', 'DAI', 'MAE', 'Imminingai langavait takugit hai imaak Ima takugit Mae hai takugit imaak Imaak Imaa hai Imaa hai imaak imaak imaak Laurilli', 'Imminingai langavait takugit hai imaak Ima takugit Mae hai takugit imaak Imaak Imaa hai Imaa hai imaak imaak imaak Laurilli', 'Like this Do it by yourself Like this Look Mae, like this See See Like this Like this Like this Your turn .', 'default', '2343.000', None, '00:39:03', None, 'Imminingai langavait takugit hai imaak Ima takugit Mae hai takugit imaak Imaak Imaa hai Imaa hai imaak imaak imaak Laurilli', None, None, None, 'showing MAE how to braid', None), (30, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u720', 'ALI', 'DAN', 'Naa naa', 'Naa naa', 'No no .', 'default', '40.000', None, '00:00:40', None, 'Naa naa', None, None, None, None, None), (31, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u721', 'JUP', 'MAR', 'qaungatillaunga', 'qaungatillaunga', 'make me go out [=? make me go here] [=? make me go up there] .', 'default', '2152.000', None, '00:35:52', None, 'qaungatillaunga', None, None, None, 'sitting on the floor looking at MAR; $CHK', None), (32, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u722', 'JUP', 'MAR', 'nimattingillugu kuvisuuraaluu', 'nimattingillugu kuvisuuraaluu', \"Don't shake or move It will spill all over ?\", 'question', '942.000', None, '00:15:42', None, 'nimattingillugu kuvisuuraaluu', None, None, None, 'referring to the popcan.', None), (33, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u723', 'JUP', None, 'Anana', 'Anana', 'Ouch !', 'exclamation', '5013.000', None, '01:23:33', None, 'Anana', None, None, None, None, 'not glossed'), (34, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u724', 'JUP', 'ITT', '', '', '0 .', 'action', '977.000', None, '00:16:17', None, '', None, None, None, 'points to telephone; COR', 'empty utterance; not glossed'), (35, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u725', 'ALI', 'DAN', '', '', '0 [=! vocalizing] .', 'action', '428.000', None, '00:07:08', None, '', None, None, None, None, 'empty utterance; not glossed'), (36, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u152', 'ALI', 'SLF', 'una apisimajuq', 'una apisimajuq', 'this one here is broken .', 'default', '550.000', None, '00:09:10', None, 'una apisimajuq', None, None, None, 'inspecting his chair', 'gloss insecure'), (37, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u171', 'ALI', 'DAN', 'aju ajuksigatta', 'aju ajuksigatta', \"stuck [//] we're stuck .\", 'default', '581.000', None, '00:09:41', None, 'aju ajuksigatta', None, None, None, None, None), (38, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'u109', 'ALI', 'DAN', 'Kaanata Kaanata Kaanata Kaanata Kaanata Kaanata', 'Kaanata Kaanata Kaanata Kaanata Kaanata Kaanata', 'Canada .', 'default', None, None, None, None, 'Kaanata Kaanata Kaanata Kaanata Kaanata Kaanata', None, None, None, None, 'broken alignment full_word : segments/glosses')]")
        self.assertEqual(str(result_jap_mii.fetchall()), "[(52, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1776', 'APR', None, 'nyan', 'nyan', None, 'default', '3863.507', '3864.379', '3863.507', '3864.379', 'nyan', None, None, None, None, None), (53, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1777', 'MOT', None, 'yoisho', 'yoisho', None, 'default', '3864.378', '3867.375', '3864.378', '3867.375', 'yoisho', None, None, None, None, None), (54, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1778', 'APR', None, 'nyan', 'nyan', None, 'default', '3866.342', '3867.744', '3866.342', '3867.744', 'nyan', None, None, None, None, None), (55, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1779', 'MOT', None, 'okkii nyannyan da ne', 'okkii nyannyan da ne', None, 'default', '3867.712', '3870.383', '3867.712', '3870.383', 'okkii nyannyan da ne', None, None, None, None, None), (56, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1780', 'APR', None, 'nyan', 'nyan', None, 'default', '3869.907', '3870.768', '3869.907', '3870.768', 'nyan', None, None, None, None, None), (57, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1781', 'MOT', None, 'hai oshimai', 'hai oshimai', None, 'default', '3870.592', '3873.121', '3870.592', '3873.121', 'hai oshimai', None, None, None, None, None), (58, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1784', 'MOT', None, 'minna dashita no Honochan minna dashita no Honochan minna dashita no Honochan', 'minna dashita no Honochan minna dashita no Honochan minna dashita no Honochan', None, 'question', '852.704', '860.891', '852.704', '860.891', 'minna dashita no Honochan minna dashita no Honochan minna dashita no Honochan', None, None, None, None, None), (59, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1782', 'MOT', None, 'un shou shou shou', 'un shou shou shou', None, 'default', '4410.894', '4412.159', '4410.894', '4412.159', 'un shou shou shou', None, None, None, None, None), (60, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1783', 'MOT', None, 'kuso kuso kuso hetappi', 'kuso kuso kuso hetappi', None, 'default', '4490.171', '4493.061', '4490.171', '4493.061', 'kuso kuso kuso hetappi', None, None, None, None, None), (61, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u1785', 'APR', None, 'kotchi no wa maeka  yatte ii', 'kotchi no wa maeka  yatte ii', None, 'question', '1314.739', '1317.889', '1314.739', '1317.889', 'kotchi no wa maeka  yatte ii', None, None, None, None, None), (62, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u46', 'MOT', None, '??? chigaimasu ne', '??? chigaimasu ne', None, 'default', '87.512', '88.917', '87.512', '88.917', '??? chigaimasu ne', None, None, None, None, 'not glossed'), (63, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u189', 'APR', None, 'dakara nne chotto matte', 'dakara nne chotto matte', None, 'exclamation', '474.723', '477.585', '474.723', '477.585', 'dakara nne chotto matte', None, None, None, None, None), (64, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u23', 'APR', None, 'Akko mite te', 'Akko mite te', None, 'exclamation', '40.287', '42.265', '40.287', '42.265', 'Akko mite te', None, None, None, None, None), (65, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u32', 'APR', None, 'kore chotto kore kore kore kore n', 'kore chotto kore kore kore kore n', None, 'default', '53.396', '57.494', '53.396', '57.494', 'kore chotto kore kore kore kore n', None, None, None, None, None), (66, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u255', 'APR', None, 'dakara a omis ano re reji wa atchi', 'dakara a omis ano re reji wa atchi', None, 'default', '689.572', '695.917', '689.572', '695.917', 'dakara a omis ano re reji wa atchi', None, None, None, None, None), (67, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'u287', 'APR', None, 'aq shooboosha motte kitenee ', 'aq shooboosha motte kitenee ', None, 'default', '708.811', '711.464', '708.811', '711.464', 'aq shooboosha motte kitenee ', None, None, None, None, None)]")       
        self.assertEqual(str(result_jap_miy.fetchall()), "[(39, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1085', 'TMO', None, 'zoosan Taishookun', 'zoosan Taishookun', None, 'default', '1473.443', '1475.254', '1473.443', '1475.254', 'zoosan Taishookun', None, None, None, None, None), (40, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1086', 'TMO', None, 'kiiro mo atta', 'kiiro mo atta', None, 'default', '1505.729', '1506.740', '1505.729', '1506.740', 'kiiro mo atta', None, None, None, None, None), (41, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1088', 'TMO', None, 'nai', 'nai', None, 'default', None, None, None, None, 'nai', None, None, None, 'has put cookie into lego door , F has taken it away', None), (42, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1089', 'TMO', None, 'oi', 'oi', None, 'default', None, None, None, None, 'oi', None, None, None, 'R stands up suddenly; to kitchen', None), (43, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1090', 'TMO', None, 'mugicha', 'mugicha', None, 'default', None, None, None, None, 'mugicha', None, None, None, None, None), (44, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1091', 'TMO', None, 'nonjattara ato choodai', 'nonjattara ato choodai', None, 'exclamation', None, None, None, None, 'nonjattara ato choodai', None, None, None, None, None), (45, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1093', 'TMO', None, 'kore wa dohifuni   hairu no', 'kore wa dohifuni   hairu no', None, 'question', None, None, None, None, 'kore wa dohifuni   hairu no', None, None, None, None, None), (46, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1087', 'TMO', None, 'njanja', 'njanja', None, 'default', None, None, None, None, 'njanja', None, None, None, 'pulls hand away , goes away', None), (47, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1092', 'TMO', None, 'bakkai bakkai bakkai', 'bakkai bakkai bakkai', None, 'default', '241.143', '244.266', '241.143', '244.266', 'bakkai bakkai bakkai', None, None, None, None, None), (48, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u1094', 'TMO', None, 'bakku bakku', 'bakku bakku', None, 'default', None, None, None, None, 'bakku bakku', None, None, None, None, None), (49, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u63', 'AMO', None, '??? sagasoo ka kok kara', '??? sagasoo ka kok kara', None, 'question', None, None, None, None, '??? sagasoo ka kok kara', None, None, None, 'AMO takes PhonoCards', None), (50, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u230', 'CHI', None, 'Suuzesan no ʃan mitai', 'Suuzesan no ʃan mitai', None, 'default', None, None, None, None, 'Suuzesan no ʃan mitai', None, None, None, 'meaning bicycle trousers clip', None), (51, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'u313', 'CHI', None, 'naʃinai tsuiteru no', 'naʃinai tsuiteru no', None, 'default', None, None, None, None, 'naʃinai tsuiteru no', None, None, None, None, None)]")
        self.assertEqual(str(result_seso.fetchall()), "[(68, 'Sesotho', 'Sesotho', 'Sesotho', 'u381', 'HLE', None, 'ke Tsebo o ntsa nkotla', 'ke Tsebo o ntsa nkotla', 'It is Tsebo who is still me hitting', 'default', '1878.400', '1884.843', '1878.400', '1884.843', 'ke Tsebo o ntsa nkotla', None, None, None, None, 'broken alignment full_word : glosses_target'), (69, 'Sesotho', 'Sesotho', 'Sesotho', 'u382', 'MAR', None, 'mohlankwane makhweshepe a teng ka lebekereng', 'mohlankwane makhweshepe a teng ka lebekereng', 'That day the rough peach was in the cup ?', 'default', '2919.123', '2930.498', '2919.123', '2930.498', 'mohlankwane makhweshepe a teng ka lebekereng', None, None, None, 'Restored gls.', 'broken alignment full_word : glosses_target'), (70, 'Sesotho', 'Sesotho', 'Sesotho', 'u383', 'HLE', None, 'ke Tsebo o ntsa nkotla', 'ke Tsebo o ntsa nkotla', 'It is Tsebo who is still me hitting', 'default', '1878.400', '1884.843', '1878.400', '1884.843', 'ke Tsebo o ntsa nkotla', None, None, None, None, 'broken alignment full_word : glosses_target'), (71, 'Sesotho', 'Sesotho', 'Sesotho', 'u384', 'MAR', None, 'ho bua teng ha o tsebe o tseba ho bina', 'ho bua teng ha o tsebe o tseba ho bina', \"To talk you don't know you know how to sing\", 'default', None, None, None, None, 'ho bua teng ha o tsebe o tseba ho bina', None, None, None, 'Restored cod.', 'broken alignment full_word : glosses_target'), (72, 'Sesotho', 'Sesotho', 'Sesotho', 'u385', 'CHI', None, 'bo butle Lineo ke qhetsole', 'bo butle Lineo ke qhetsole', 'Wait Lineo so I can break', 'default', '239.645', '241.835', '239.645', '241.835', 'bo butle Lineo ke qhetsole', None, None, None, None, 'broken alignment full_word : glosses_target'), (73, 'Sesotho', 'Sesotho', 'Sesotho', 'u386', 'NEU', None, 'ke tla kuka wane wa nkhono', 'ke tla kuka wane wa nkhono', 'I will take that one for grandmother', 'default', '1800.848', '1803.446', '1800.848', '1803.446', 'ke tla kuka wane wa nkhono', None, None, None, None, 'broken alignment full_word : glosses_target'), (74, 'Sesotho', 'Sesotho', 'Sesotho', 'u387', 'CHI', None, 'jwale ha re sa bue tjee', 'jwale ha re sa bue tjee', 'Now we do not talk like this', 'default', '1641.281', '1644.161', '1641.281', '1644.161', 'jwale ha re sa bue tjee', None, None, None, None, 'broken alignment full_word : glosses_target'), (75, 'Sesotho', 'Sesotho', 'Sesotho', 'u388', 'CHI', None, 'ebile etabwile a e nkileng', 'ebile etabwile a e nkileng', 'It is even torn the one he has taken', 'default', None, None, None, None, 'ebile etabwile a e nkileng', None, None, None, None, 'broken alignment full_word : glosses_target'), (76, 'Sesotho', 'Sesotho', 'Sesotho', 'u390', 'NTS', None, 'molakaladi ha o mongata lekgale', 'molakaladi ha o mongata lekgale', 'Molakaladi is so much', 'default', None, None, None, None, 'molakaladi ha o mongata lekgale', None, None, None, None, None), (77, 'Sesotho', 'Sesotho', 'Sesotho', 'u389', 'CHI', None, 'le na ta iyetsa tsikitsiki', 'le na ta iyetsa tsikitsiki', 'And me I will tickle you tsiki tsiki', 'default', '2849.169', '2853.369', '2849.169', '2853.369', 'le na ta iyetsa tsikitsiki', None, None, None, None, None), (78, 'Sesotho', 'Sesotho', 'Sesotho', 'u41', 'TLN', None, 'mme Mach ??? okae', 'mme Mach ??? okae', 'Where is mother Machaka?', 'question', '360.400', '367.551', '360.400', '367.551', 'mme Mach ??? okae', None, None, None, None, None)]")
        self.assertEqual(str(result_turk.fetchall()), "[(79, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1925', 'MOT', None, 'otur bakalım', 'otur bakalım', None, 'default', None, None, None, None, 'otur bakalım', None, None, None, None, None), (80, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1929', 'MOT', None, 'bir tek bu var', 'bir tek bu var', None, 'default', None, None, None, None, 'bir tek bu var', None, None, None, None, None), (81, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1933', 'MOT', None, 'onu kaldırdı Necla', 'onu kaldırdı Necla', None, 'default', None, None, None, None, 'onu kaldırdı Necla', None, None, None, None, None), (82, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1934', 'MOT', None, 'Necla kaldırdı', 'Necla kaldırdı', None, 'default', None, None, None, None, 'Necla kaldırdı', None, None, None, None, None), (83, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1935', 'AUN', None, 'sen gel bana sen gel taytay gel', 'sen gel bana sen gel taytay gel', None, 'default', None, None, None, None, 'sen gel bana sen gel taytay gel', None, None, None, \"AUN holds CHI's hand. CHI is still holding pens. They are walking together to armchair.\", None), (84, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1926', 'CHI', None, 'bi tan dı', 'bi tan dı', None, 'default', '3745.000', None, '01:02:25', None, 'bi tan dı', None, None, None, None, None), (85, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1927', 'CHI', None, 'bi tan da', 'bi tan da', None, 'default', '3746.000', None, '01:02:26', None, 'bi tan da', None, None, None, None, None), (86, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1931', 'CHI', None, 'bi tan da', 'bi tan da', None, 'default', '3753.000', None, '01:02:33', None, 'bi tan da', None, None, None, None, None), (87, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1928', 'MOT', None, 'bi tane daha minder yok', 'bi tane daha minder yok', None, 'default', None, None, None, None, 'bi tane daha minder yok', None, None, None, None, None), (88, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1930', 'MOT', None, 'bi de çadırdakiler var', 'bi de çadırdakiler var', None, 'default', None, None, None, None, 'bi de çadırdakiler var', None, None, None, None, None), (89, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u1932', 'MOT', None, 'bi tane daha vardı ama yok', 'bi tane daha vardı ama yok', None, 'default', None, None, None, None, 'bi tane daha vardı ama yok', None, None, None, None, None), (90, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u296', 'AYL', None, 'anlaştık baya anlaştık baya', 'anlaştık baya anlaştık baya', None, 'default', None, None, None, None, 'anlaştık baya anlaştık baya', None, None, None, None, None), (91, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u603', 'MOT', None, 'lokma al alınca bağrıyoruz', 'lokma al alınca bağrıyoruz', None, 'default', None, None, None, None, 'lokma al alınca bağrıyoruz', None, None, None, None, None), (92, 'Turkish', 'Turkish_KULLD', 'Turkish', 'u119', 'AYL', None, 'zaten doğuş doğuş kilonun şeyi hiç bi_şeyle  diğil', 'zaten doğuş doğuş kilonun şeyi hiç bi_şeyle  diğil', None, 'default', None, None, None, None, 'zaten doğuş doğuş kilonun şeyi hiç bi_şeyle  diğil', None, None, None, None, None)]")
        self.assertEqual(str(result_yuc.fetchall()), "[(93, 'Yucatec', 'Yucatec', 'Yucatec', 'u0', 'NEI', None, 'xáchet apool', 'xáchet apool', None, 'default', None, None, None, None, 'xáchet apool', None, None, None, None, None), (94, 'Yucatec', 'Yucatec', 'Yucatec', 'u1', 'ARM', None, 'pool', 'pool', None, 'default', None, None, None, None, 'pool', None, None, None, None, None), (95, 'Yucatec', 'Yucatec', 'Yucatec', 'u2', 'ARM', None, 'wich', 'wich', None, 'default', None, None, None, None, 'wich', None, None, None, None, None), (96, 'Yucatec', 'Yucatec', 'Yucatec', 'u3', 'NEI', None, 'wich tachʔop-ah awich yéet-el', 'wich tachʔop-ah awich yéet-el', None, 'default', None, None, None, None, 'wich tachʔop-ah awich yéet-el', None, None, None, None, None), (97, 'Yucatec', 'Yucatec', 'Yucatec', 'u4', 'ARM', None, 'wich xáacheʔ', 'wich xáacheʔ', None, 'default', None, None, None, None, 'wich xáacheʔ', None, None, None, None, None), (98, 'Yucatec', 'Yucatec', 'Yucatec', 'u5', 'LOR', None, 'yéet-el xáacheʔ', 'yéet-el xáacheʔ', None, 'default', None, None, None, None, 'yéet-el xáacheʔ', None, None, None, None, None), (99, 'Yucatec', 'Yucatec', 'Yucatec', 'u6', 'ARM', None, 'xáacheʔ', 'xáacheʔ', None, 'default', None, None, None, None, 'xáacheʔ', None, None, None, None, None), (100, 'Yucatec', 'Yucatec', 'Yucatec', 'u7', 'NEI', None, 'xáacheʔ chʔik teʔ tiʔ anookʔ-oʔ', 'xáacheʔ chʔik teʔ tiʔ anookʔ-oʔ', None, 'default', None, None, None, None, 'xáacheʔ chʔik teʔ tiʔ anookʔ-oʔ', None, None, None, None, None), (101, 'Yucatec', 'Yucatec', 'Yucatec', 'u8', 'ARM', None, 'chʔík', 'chʔík', None, 'default', None, None, None, None, 'chʔík', None, None, None, None, None), (102, 'Yucatec', 'Yucatec', 'Yucatec', 'u9', 'LOR', None, 'tiʔ abolsa', 'tiʔ abolsa', None, 'question', None, None, None, None, 'tiʔ abolsa', None, None, None, None, None), (103, 'Yucatec', 'Yucatec', 'Yucatec', 'u24', 'ARM', None, '??? yan inmaháant-ik', '??? yan inmaháant-ik', None, 'default', None, None, None, None, '??? yan inmaháant-ik', None, None, None, None, None), (104, 'Yucatec', 'Yucatec', 'Yucatec', 'u0', 'SAN', None, 'le wat-oʔ neneʔ', 'le wat-oʔ neneʔ', None, 'default', None, None, None, None, 'le wat-oʔ neneʔ', None, None, None, None, 'broken alignment full_word : segments/glosses')]")
        session.close()
        
        
        
    def testXMLWords(self):
        """
        Test if all words for XML test files are loaded
        """
        session = make_session()
        self.assertEqual(session.query(db.Word).count(), 341)
        
        s_cree = select([db.Word], and_(db.Word.corpus=="Cree"))
        s_inuk = select([db.Word], and_(db.Word.corpus=="Inuktitut"))
        s_jap_mii = select([db.Word], and_(db.Word.corpus=="Japanese_MiiPro"))
        s_jap_miy = select([db.Word], and_(db.Word.corpus=="Japanese_Miyata"))
        s_seso = select([db.Word], and_(db.Word.corpus=="Sesotho"))
        s_turk = select([db.Word], and_(db.Word.corpus=="Turkish_KULLD"))
        s_yuc = select([db.Word], and_(db.Word.corpus=="Yucatec"))
        result_cree = session.execute(s_cree)
        result_inuk = session.execute(s_inuk)
        result_jap_mii = session.execute(s_jap_mii)
        result_jap_miy = session.execute(s_jap_miy)
        result_seso = session.execute(s_seso)
        result_turk = session.execute(s_turk)
        result_yuc = session.execute(s_yuc)
        
        self.assertEqual(str(result_cree.fetchall()), "[(1, 'Cree', 'u700', 'Cree', 'Cree', 'mîn', 'mîn', 'mîn', None), (2, 'Cree', 'u700', 'Cree', 'Cree', 'kiyâ', 'kiyâ', 'kiyâ', None), (3, 'Cree', 'u700', 'Cree', 'Cree', 'îhî', 'îhî', 'îhî', None), (4, 'Cree', 'u701', 'Cree', 'Cree', 'kiyâ', 'kiyâ', 'kiyâ', None), (5, 'Cree', 'u701', 'Cree', 'Cree', None, None, None, 'See warning in Utterance table at: Cree, u701 '), (6, 'Cree', 'u702', 'Cree', 'Cree', 'Nuwich', 'Nuwich', 'Nuwich', None), (7, 'Cree', 'u702', 'Cree', 'Cree', 'uwiitaayimaa', 'uwiitaayimaa', 'uwiitaayimaa', None), (8, 'Cree', 'u704', 'Cree', 'Cree', 'Miin', 'Miin', 'Miin', None), (9, 'Cree', 'u704', 'Cree', 'Cree', 'aa', 'aa', 'aa', None), (10, 'Cree', 'u705', 'Cree', 'Cree', 'mîn', 'mîn', 'mîn', None), (11, 'Cree', 'u705', 'Cree', 'Cree', 'kiyâ', 'kiyâ', 'kiyâ', None), (12, 'Cree', 'u707', 'Cree', 'Cree', 'mâu', 'mâu', 'mâu', None), (13, 'Cree', 'u710', 'Cree', 'Cree', 'Aakuu', 'Aakuu', 'Aakuu', None), (14, 'Cree', 'u710', 'Cree', 'Cree', 'maak', 'maak', 'maak', None), (15, 'Cree', 'u710', 'Cree', 'Cree', 'aa', 'aa', 'aa', None), (16, 'Cree', 'u710', 'Cree', 'Cree', 'naatihwaahtaau', 'naatihwaahtaau', 'naatihwaahtaau', None), (17, 'Cree', 'u710', 'Cree', 'Cree', 'aai', 'aai', 'aai', None), (18, 'Cree', 'u706', 'Cree', 'Cree', 'two', 'two', 'two', None), (19, 'Cree', 'u703', 'Cree', 'Cree', 'tv', 'tv', 'tv', None), (20, 'Cree', 'u708', 'Cree', 'Cree', '???', '???', '???', None), (21, 'Cree', 'u708', 'Cree', 'Cree', None, None, None, 'See warning in Utterance table at: Cree, u708 '), (22, 'Cree', 'u709', 'Cree', 'Cree', '???', '???', '???', None)]")
        self.assertEqual(str(result_inuk.fetchall()), "[(23, 'Inuktitut', 'u702', 'Inuktitut', 'Inuktitut', 'here', 'here', 'here', None), (24, 'Inuktitut', 'u702', 'Inuktitut', 'Inuktitut', 'shanley', 'shanley', 'shanley', None), (25, 'Inuktitut', 'u702', 'Inuktitut', 'Inuktitut', 'have', 'have', 'have', None), (26, 'Inuktitut', 'u702', 'Inuktitut', 'Inuktitut', 'a', 'a', 'a', None), (27, 'Inuktitut', 'u702', 'Inuktitut', 'Inuktitut', 'plate', 'plate', 'plate', None), (28, 'Inuktitut', 'u705', 'Inuktitut', 'Inuktitut', 'aunatakka', 'aunatakka', 'aunatakka', None), (29, 'Inuktitut', 'u706', 'Inuktitut', 'Inuktitut', 'una', 'una', 'una', None), (30, 'Inuktitut', 'u707', 'Inuktitut', 'Inuktitut', 'una', 'una', 'una', None), (31, 'Inuktitut', 'u710', 'Inuktitut', 'Inuktitut', 'tursuniitu', 'tursuniitu', 'tursuniitu', None), (32, 'Inuktitut', 'u710', 'Inuktitut', 'Inuktitut', 'qimmianirtisijuruluulirtu', 'qimmianirtisijuruluulirtu', 'qimmianirtisijuruluulirtu', 'transcription insecure'), (33, 'Inuktitut', 'u711', 'Inuktitut', 'Inuktitut', 'angijuaa', 'angijuaa', 'angijuaa', None), (34, 'Inuktitut', 'u703', 'Inuktitut', 'Inuktitut', '???tutusivunga', '???tutusivunga', '???tutusivunga', None), (35, 'Inuktitut', 'u714', 'Inuktitut', 'Inuktitut', '???', '???', '???', None), (36, 'Inuktitut', 'u714', 'Inuktitut', 'Inuktitut', '???mat', '???mat', '???mat', None), (37, 'Inuktitut', 'u714', 'Inuktitut', 'Inuktitut', 'mat???', 'mat???', 'mat???', None), (38, 'Inuktitut', 'u714', 'Inuktitut', 'Inuktitut', '???mat???', '???mat???', '???mat???', None), (39, 'Inuktitut', 'u704', 'Inuktitut', 'Inuktitut', 'un', 'un', 'un', None), (40, 'Inuktitut', 'u704', 'Inuktitut', 'Inuktitut', 'anna', 'anna', 'anna', None), (41, 'Inuktitut', 'u712', 'Inuktitut', 'Inuktitut', 'Qangattajuuraaluk', 'Qangattajuuraaluk', 'Qangattajuuraaluk', None), (42, 'Inuktitut', 'u713', 'Inuktitut', 'Inuktitut', 'nauk', 'nauk', 'nauk', None), (43, 'Inuktitut', 'u713', 'Inuktitut', 'Inuktitut', '???', '???', '???', None), (44, 'Inuktitut', 'u715', 'Inuktitut', 'Inuktitut', 'av', 'av', '???', 'not glossed'), (45, 'Inuktitut', 'u715', 'Inuktitut', 'Inuktitut', 'uvanga', 'uvanga', 'uvanga', None), (46, 'Inuktitut', 'u716', 'Inuktitut', 'Inuktitut', '???', '???', 'unaliuna piga', None), (47, 'Inuktitut', 'u717', 'Inuktitut', 'Inuktitut', 'avungaunna', 'avungaunna', 'avungaunna', None), (48, 'Inuktitut', 'u718', 'Inuktitut', 'Inuktitut', 'Shaamiitumi', 'Shaamiitumi', 'Shaamiitumi', None), (49, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Imminingai', 'Imminingai', 'Imminingai', None), (50, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'langavait', 'langavait', 'langavait', None), (51, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'takugit', 'takugit', 'takugit', None), (52, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'hai', 'hai', 'hai', None), (53, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'imaak', 'imaak', 'imaak', None), (54, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Ima', 'Ima', 'Ima', None), (55, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'takugit', 'takugit', 'takugit', None), (56, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Mae', 'Mae', 'Mae', None), (57, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'hai', 'hai', 'hai', None), (58, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'takugit', 'takugit', 'takugit', None), (59, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'imaak', 'imaak', 'imaak', None), (60, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Imaak', 'Imaak', 'Imaak', None), (61, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Imaa', 'Imaa', 'Imaa', None), (62, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'hai', 'hai', 'hai', None), (63, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Imaa', 'Imaa', 'Imaa', None), (64, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'hai', 'hai', 'hai', None), (65, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'imaak', 'imaak', 'imaak', None), (66, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'imaak', 'imaak', 'imaak', None), (67, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'imaak', 'imaak', 'imaak', None), (68, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'Laurilli', 'Laurilli', 'Laurilli', None), (69, 'Inuktitut', 'u720', 'Inuktitut', 'Inuktitut', 'Naa', 'Naa', 'Naa', None), (70, 'Inuktitut', 'u720', 'Inuktitut', 'Inuktitut', 'naa', 'naa', 'naa', None), (71, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'qaungatillaunga', 'qaungatillaunga', 'maungatillaunga', None), (72, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'nimattingillugu', 'nimattingillugu', 'nimattingillugu', None), (73, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'kuvisuuraaluu', 'kuvisuuraaluu', 'kuvisuuraaluu', None), (74, 'Inuktitut', 'u723', 'Inuktitut', 'Inuktitut', 'Anana', 'Anana', 'Anana', None), (75, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'una', 'una', 'una', None), (76, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'apisimajuq', 'apisimajuq', 'napisimajuq', None), (77, 'Inuktitut', 'u171', 'Inuktitut', 'Inuktitut', 'aju', 'aju', 'ajursi', None), (78, 'Inuktitut', 'u171', 'Inuktitut', 'Inuktitut', 'ajuksigatta', 'ajuksigatta', 'ajuksigatta', None), (79, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'Kaanata', 'Kaanata', 'Kaanata', None), (80, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'Kaanata', 'Kaanata', 'Kaanata', None), (81, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'Kaanata', 'Kaanata', 'Kaanata', None), (82, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'Kaanata', 'Kaanata', 'Kaanata', None), (83, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'Kaanata', 'Kaanata', 'Kaanata', None), (84, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'Kaanata', 'Kaanata', 'Kaanata', None), (85, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', None, None, None, 'See warning in Utterance table at: Inuktitut, u109 ')]")
        self.assertEqual(str(result_jap_mii.fetchall()), "[(125, 'Japanese_MiiPro', 'u1776', 'Japanese_MiiPro', 'Japanese', 'nyan', 'nyan', 'nyan', None), (126, 'Japanese_MiiPro', 'u1777', 'Japanese_MiiPro', 'Japanese', 'yoisho', 'yoisho', 'yoisho', None), (127, 'Japanese_MiiPro', 'u1778', 'Japanese_MiiPro', 'Japanese', 'nyan', 'nyan', 'nyan', None), (128, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'okkii', 'okkii', 'okkii', None), (129, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'nyannyan', 'nyannyan', 'nyannyan', None), (130, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'da', 'da', 'da', None), (131, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'ne', 'ne', 'ne', None), (132, 'Japanese_MiiPro', 'u1780', 'Japanese_MiiPro', 'Japanese', 'nyan', 'nyan', 'nyan', None), (133, 'Japanese_MiiPro', 'u1781', 'Japanese_MiiPro', 'Japanese', 'hai', 'hai', 'hai', None), (134, 'Japanese_MiiPro', 'u1781', 'Japanese_MiiPro', 'Japanese', 'oshimai', 'oshimai', 'oshimai', None), (135, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'minna', 'minna', 'minna', None), (136, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'dashita', 'dashita', 'dashita', None), (137, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'no', 'no', 'no', None), (138, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'Honochan', 'Honochan', 'Honochan', None), (139, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'minna', 'minna', 'minna', None), (140, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'dashita', 'dashita', 'dashita', None), (141, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'no', 'no', 'no', None), (142, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'Honochan', 'Honochan', 'Honochan', None), (143, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'minna', 'minna', 'minna', None), (144, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'dashita', 'dashita', 'dashita', None), (145, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'no', 'no', 'no', None), (146, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'Honochan', 'Honochan', 'Honochan', None), (147, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'un', 'un', 'un', None), (148, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'shou', 'shou', 'soo', None), (149, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'shou', 'shou', 'soo', None), (150, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'shou', 'shou', 'soo', None), (151, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'kuso', 'kuso', 'kuso', None), (152, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'kuso', 'kuso', 'kuso', None), (153, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'kuso', 'kuso', 'kuso', None), (154, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'hetappi', 'hetappi', 'hetappi', None), (155, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'kotchi', 'kotchi', 'kotchi', None), (156, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'no', 'no', 'no', None), (157, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'wa', 'wa', 'wa', None), (158, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'maeka', 'maeka', 'moo', None), (159, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', '', '', 'ikkai', None), (160, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'yatte', 'yatte', 'yatte', None), (161, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'ii', 'ii', 'ii', None), (162, 'Japanese_MiiPro', 'u46', 'Japanese_MiiPro', 'Japanese', '???', '???', '???', 'not glossed'), (163, 'Japanese_MiiPro', 'u46', 'Japanese_MiiPro', 'Japanese', 'chigaimasu', 'chigaimasu', 'chigaimasu', None), (164, 'Japanese_MiiPro', 'u46', 'Japanese_MiiPro', 'Japanese', 'ne', 'ne', 'ne', None), (165, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'dakara', 'dakara', 'dakara', None), (166, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'nne', 'nne', '???', 'not glossed'), (167, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'chotto', 'chotto', 'chotto', None), (168, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'matte', 'matte', 'matte', None), (169, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'Akko', 'Akko', 'Akko', None), (170, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'mite', 'mite', 'mite', None), (171, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'te', 'te', 'ite', None), (172, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'kore', 'kore', 'kore', None), (173, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'chotto', 'chotto', 'chotto', None), (174, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'kore', 'kore', 'kore', None), (175, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'kore', 'kore', 'kore', None), (176, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'kore', 'kore', 'kore', None), (177, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'kore', 'kore', 'kore', None), (178, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'n', 'n', 'n', None), (179, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'dakara', 'dakara', 'dakara', None), (180, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'a', 'a', '???', 'not glossed'), (181, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'omis', 'omis', 'omise', None), (182, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'ano', 'ano', 'ano', None), (183, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 're', 're', '???', 'not glossed'), (184, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'reji', 'reji', 'reji', None), (185, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'wa', 'wa', 'wa', None), (186, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'atchi', 'atchi', 'atchi', None), (187, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'aq', 'aq', 'aq', None), (188, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'shooboosha', 'shooboosha', 'shooboosha', None), (189, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'motte', 'motte', 'motte', None), (190, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'kitenee', 'kitenee', 'kite', None), (191, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', '', '', 'inai', None)]")
        self.assertEqual(str(result_jap_miy.fetchall()), "[(86, 'Japanese_Miyata', 'u1085', 'Japanese_Miyata', 'Japanese', 'zoosan', 'zoosan', 'zoosan', None), (87, 'Japanese_Miyata', 'u1085', 'Japanese_Miyata', 'Japanese', 'Taishookun', 'Taishookun', 'Taishookun', None), (88, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'kiiro', 'kiiro', 'kiiro', None), (89, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'mo', 'mo', 'mo', None), (90, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'atta', 'atta', 'atta', None), (91, 'Japanese_Miyata', 'u1088', 'Japanese_Miyata', 'Japanese', 'nai', 'nai', 'nai', None), (92, 'Japanese_Miyata', 'u1089', 'Japanese_Miyata', 'Japanese', 'oi', 'oi', 'oi', None), (93, 'Japanese_Miyata', 'u1090', 'Japanese_Miyata', 'Japanese', 'mugicha', 'mugicha', 'mugicha', None), (94, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'nonjattara', 'nonjattara', 'nonjattara', None), (95, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'ato', 'ato', 'ato', None), (96, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'choodai', 'choodai', 'choodai', None), (97, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'kore', 'kore', 'kore', None), (98, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'wa', 'wa', 'wa', None), (99, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'dohifuni', 'dohifuni', 'dooiu', None), (100, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', '', '', 'fuu', None), (101, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', '', '', 'ni', None), (102, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'hairu', 'hairu', 'hairu', None), (103, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'no', 'no', 'no', None), (104, 'Japanese_Miyata', 'u1087', 'Japanese_Miyata', 'Japanese', 'njanja', 'njanja', 'nainai', None), (105, 'Japanese_Miyata', 'u1092', 'Japanese_Miyata', 'Japanese', 'bakkai', 'bakkai', 'bakkari', None), (106, 'Japanese_Miyata', 'u1092', 'Japanese_Miyata', 'Japanese', 'bakkai', 'bakkai', 'bakkari', None), (107, 'Japanese_Miyata', 'u1092', 'Japanese_Miyata', 'Japanese', 'bakkai', 'bakkai', 'bakkari', None), (108, 'Japanese_Miyata', 'u1094', 'Japanese_Miyata', 'Japanese', 'bakku', 'bakku', 'bakku', None), (109, 'Japanese_Miyata', 'u1094', 'Japanese_Miyata', 'Japanese', 'bakku', 'bakku', 'bakku', None), (110, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', '???', '???', '???', 'not glossed'), (111, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'sagasoo', 'sagasoo', 'sagasoo', None), (112, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'ka', 'ka', 'ka', None), (113, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'kok', 'kok', 'koko', None), (114, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'kara', 'kara', 'kara', None), (115, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', None, None, None, 'See warning in Utterance table at: Japanese_Miyata, u63 '), (116, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'Suuzesan', 'Suuzesan', 'Suuzesan', None), (117, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'no', 'no', 'no', None), (118, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'ʃan', 'ʃan', '???', 'not glossed; not glossed'), (119, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'mitai', 'mitai', 'mitai', None), (120, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', None, None, None, 'See warning in Utterance table at: Japanese_Miyata, u230 '), (121, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'naʃinai', 'naʃinai', '???', 'not glossed; transcription insecure; not glossed'), (122, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'tsuiteru', 'tsuiteru', 'tsuiteru', None), (123, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'no', 'no', 'no', None), (124, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', None, None, None, 'See warning in Utterance table at: Japanese_Miyata, u313 ')]")
        self.assertEqual(str(result_seso.fetchall()), "[(192, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'ke', 'ke', 'ke', None), (193, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'Tsebo', 'Tsebo', 'Tsebo', None), (194, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'o', 'o', 'o', None), (195, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'ntsa', 'ntsa', 'ntsa', None), (196, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'nkotla', 'nkotla', 'nkotla', None), (197, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'mohlankwane', 'mohlankwane', 'mohlankwane', None), (198, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'makhweshepe', 'makhweshepe', 'makhweshepe', None), (199, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'a', 'a', 'a', None), (200, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'teng', 'teng', 'teng', None), (201, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'ka', 'ka', 'ka', None), (202, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'lebekereng', 'lebekereng', 'lebekereng', None), (203, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', None, None, None, 'See warning in Utterance table at: Sesotho, u382 '), (204, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', None, None, None, 'See warning in Utterance table at: Sesotho, u382 '), (205, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'ke', 'ke', 'ke', None), (206, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'Tsebo', 'Tsebo', 'Tsebo', None), (207, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'o', 'o', 'o', None), (208, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'ntsa', 'ntsa', 'ntsa', None), (209, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'nkotla', 'nkotla', 'nkotla', None), (210, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'ho', 'ho', 'ho', None), (211, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'bua', 'bua', 'bua', None), (212, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'teng', 'teng', 'teng', None), (213, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'ha', 'ha', 'ha', None), (214, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'o', 'o', 'o', None), (215, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'tsebe', 'tsebe', 'tsebe', None), (216, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'o', 'o', 'o', None), (217, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'tseba', 'tseba', 'tseba', None), (218, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'ho', 'ho', 'ho', None), (219, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'bina', 'bina', 'bina', None), (220, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'bo', 'bo', 'bo', None), (221, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'butle', 'butle', 'butle', None), (222, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'Lineo', 'Lineo', 'Lineo', None), (223, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'ke', 'ke', 'ke', None), (224, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'qhetsole', 'qhetsole', 'qhetsole', None), (225, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'ke', 'ke', 'ke', None), (226, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'tla', 'tla', 'tla', None), (227, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'kuka', 'kuka', 'kuka', None), (228, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'wane', 'wane', 'wane', None), (229, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'wa', 'wa', 'wa', None), (230, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'nkhono', 'nkhono', 'nkhono', None), (231, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'jwale', 'jwale', 'jwale', None), (232, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'ha', 'ha', 'ha', None), (233, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 're', 're', 're', None), (234, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'sa', 'sa', 'sa', None), (235, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'bue', 'bue', 'bue', None), (236, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'tjee', 'tjee', 'tjee', None), (237, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'ebile', 'ebile', 'ebile', None), (238, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'etabwile', 'etabwile', 'etabwile', None), (239, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'a', 'a', 'a', None), (240, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'e', 'e', 'e', None), (241, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'nkileng', 'nkileng', 'nkileng', None), (242, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'molakaladi', 'molakaladi', 'molakaladi', None), (243, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'ha', 'ha', 'ha', None), (244, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'o', 'o', 'o', None), (245, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'mongata', 'mongata', 'mongata', None), (246, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'lekgale', 'lekgale', 'lekgale', None), (247, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'le', 'le', 'le', None), (248, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'na', 'na', 'na', None), (249, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'ta', 'ta', 'ita', None), (250, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'iyetsa', 'iyetsa', 'iyetsa', None), (251, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'tsikitsiki', 'tsikitsiki', 'tsikitsiki', None), (252, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'mme', 'mme', 'mme', None), (253, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'Mach', 'Mach', 'Mach', None), (254, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', '???', '???', '???', None), (255, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'okae', 'okae', 'okae', None)]")
        self.assertEqual(str(result_turk.fetchall()), "[(256, 'Turkish', 'u1925', 'Turkish_KULLD', 'Turkish', 'otur', 'otur', 'otur', None), (257, 'Turkish', 'u1925', 'Turkish_KULLD', 'Turkish', 'bakalım', 'bakalım', 'bakalım', None), (258, 'Turkish', 'u1929', 'Turkish_KULLD', 'Turkish', 'bir', 'bir', 'bir', None), (259, 'Turkish', 'u1929', 'Turkish_KULLD', 'Turkish', 'tek', 'tek', 'tek', None), (260, 'Turkish', 'u1929', 'Turkish_KULLD', 'Turkish', 'bu', 'bu', 'bu', None), (261, 'Turkish', 'u1929', 'Turkish_KULLD', 'Turkish', 'var', 'var', 'var', None), (262, 'Turkish', 'u1933', 'Turkish_KULLD', 'Turkish', 'onu', 'onu', 'onu', None), (263, 'Turkish', 'u1933', 'Turkish_KULLD', 'Turkish', 'kaldırdı', 'kaldırdı', 'kaldırdı', None), (264, 'Turkish', 'u1933', 'Turkish_KULLD', 'Turkish', 'Necla', 'Necla', 'Necla', None), (265, 'Turkish', 'u1934', 'Turkish_KULLD', 'Turkish', 'Necla', 'Necla', 'Necla', None), (266, 'Turkish', 'u1934', 'Turkish_KULLD', 'Turkish', 'kaldırdı', 'kaldırdı', 'kaldırdı', None), (267, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'sen', 'sen', 'sen', None), (268, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'gel', 'gel', 'gel', None), (269, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'bana', 'bana', 'bana', None), (270, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'sen', 'sen', 'sen', None), (271, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'gel', 'gel', 'gel', None), (272, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'taytay', 'taytay', 'taytay', 'not glossed'), (273, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'gel', 'gel', 'gel', None), (274, 'Turkish', 'u1926', 'Turkish_KULLD', 'Turkish', 'bi', 'bi', 'bir', None), (275, 'Turkish', 'u1926', 'Turkish_KULLD', 'Turkish', 'tan', 'tan', 'tane', None), (276, 'Turkish', 'u1926', 'Turkish_KULLD', 'Turkish', 'dı', 'dı', 'daha', None), (277, 'Turkish', 'u1927', 'Turkish_KULLD', 'Turkish', 'bi', 'bi', 'bir', None), (278, 'Turkish', 'u1927', 'Turkish_KULLD', 'Turkish', 'tan', 'tan', 'tane', None), (279, 'Turkish', 'u1927', 'Turkish_KULLD', 'Turkish', 'da', 'da', 'daha', None), (280, 'Turkish', 'u1931', 'Turkish_KULLD', 'Turkish', 'bi', 'bi', 'bir', None), (281, 'Turkish', 'u1931', 'Turkish_KULLD', 'Turkish', 'tan', 'tan', 'tane', None), (282, 'Turkish', 'u1931', 'Turkish_KULLD', 'Turkish', 'da', 'da', 'daha', None), (283, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'bi', 'bi', 'bir', None), (284, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'tane', 'tane', 'tane', None), (285, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'daha', 'daha', 'daha', None), (286, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'minder', 'minder', 'minder', None), (287, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'yok', 'yok', 'yok', None), (288, 'Turkish', 'u1930', 'Turkish_KULLD', 'Turkish', 'bi', 'bi', 'bir', None), (289, 'Turkish', 'u1930', 'Turkish_KULLD', 'Turkish', 'de', 'de', 'de', None), (290, 'Turkish', 'u1930', 'Turkish_KULLD', 'Turkish', 'çadırdakiler', 'çadırdakiler', 'çadırdakiler', None), (291, 'Turkish', 'u1930', 'Turkish_KULLD', 'Turkish', 'var', 'var', 'var', None), (292, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'bi', 'bi', 'bir', None), (293, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'tane', 'tane', 'tane', None), (294, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'daha', 'daha', 'daha', None), (295, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'vardı', 'vardı', 'vardı', None), (296, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'ama', 'ama', 'ama', None), (297, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'yok', 'yok', 'yok', None), (298, 'Turkish', 'u296', 'Turkish_KULLD', 'Turkish', 'anlaştık', 'anlaştık', 'anlaştık', None), (299, 'Turkish', 'u296', 'Turkish_KULLD', 'Turkish', 'baya', 'baya', 'baya', None), (300, 'Turkish', 'u296', 'Turkish_KULLD', 'Turkish', 'anlaştık', 'anlaştık', 'anlaştık', None), (301, 'Turkish', 'u296', 'Turkish_KULLD', 'Turkish', 'baya', 'baya', 'baya', None), (302, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'lokma', 'lokma', 'lokma', None), (303, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'al', 'al', 'al', None), (304, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'alınca', 'alınca', 'alınca', None), (305, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'bağrıyoruz', 'bağrıyoruz', 'bağrıyoruz', None), (306, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'zaten', 'zaten', 'zaten', None), (307, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'doğuş', 'doğuş', 'doğuş', 'not glossed; search ahead'), (308, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'doğuş', 'doğuş', 'doğuş', None), (309, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'kilonun', 'kilonun', 'kilonun', None), (310, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'şeyi', 'şeyi', 'şeyi', None), (311, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'hiç', 'hiç', 'hiç', None), (312, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'bi_şeyle', 'bi_şeyle', 'bir_şeyle', None), (313, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', '', '', '', None), (314, 'Turkish', 'u119', 'Turkish_KULLD', 'Turkish', 'diğil', 'diğil', 'değil', None)]")
        self.assertEqual(str(result_yuc.fetchall()), "[(315, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'xáchet', '???', 'xáchet', None), (316, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'apool', '???', 'apool', None), (317, 'Yucatec', 'u1', 'Yucatec', 'Yucatec', 'pool', '???', 'pool', None), (318, 'Yucatec', 'u2', 'Yucatec', 'Yucatec', 'wich', '???', 'wich', None), (319, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'wich', '???', 'wich', None), (320, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'tachʔop-ah', '???', 'tachʔop-ah', None), (321, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'awich', '???', 'awich', None), (322, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'yéet-el', '???', 'yéet-el', None), (323, 'Yucatec', 'u4', 'Yucatec', 'Yucatec', 'wich', '???', 'wich', None), (324, 'Yucatec', 'u4', 'Yucatec', 'Yucatec', 'xáacheʔ', '???', 'xáacheʔ', None), (325, 'Yucatec', 'u5', 'Yucatec', 'Yucatec', 'yéet-el', '???', 'yéet-el', None), (326, 'Yucatec', 'u5', 'Yucatec', 'Yucatec', 'xáacheʔ', '???', 'xáacheʔ', None), (327, 'Yucatec', 'u6', 'Yucatec', 'Yucatec', 'xáacheʔ', '???', 'xáacheʔ', None), (328, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'xáacheʔ', '???', 'xáacheʔ', None), (329, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'chʔik', '???', 'chʔik', None), (330, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'teʔ', '???', 'teʔ', None), (331, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'tiʔ', '???', 'tiʔ', None), (332, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'anookʔ-oʔ', '???', 'anookʔ-oʔ', None), (333, 'Yucatec', 'u8', 'Yucatec', 'Yucatec', 'chʔík', '???', 'chʔík', None), (334, 'Yucatec', 'u9', 'Yucatec', 'Yucatec', 'tiʔ', '???', 'tiʔ', None), (335, 'Yucatec', 'u9', 'Yucatec', 'Yucatec', 'abolsa', '???', 'abolsa', None), (336, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', '???', '???', '???', 'not glossed'), (337, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', 'yan', '???', 'yan', None), (338, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', 'inmaháant-ik', '???', 'inmaháant-ik', None), (339, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'le', '???', 'le', None), (340, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'wat-oʔ', '???', 'wat-oʔ', None), (341, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'neneʔ', '???', 'neneʔ', None)]")
        session.close()
        
    def testXMLMorphemes(self):
        """
        Test if all morphemes for XML test files are loaded
        """
        session = make_session()
        self.assertEqual(session.query(db.Morpheme).count(), 394)
        
        s_cree = select([db.Morpheme], and_(db.Word.corpus=="Cree")) 
        s_inuk = select([db.Morpheme], and_(db.Word.corpus=="Inuktitut"))
        s_jap_mii = select([db.Morpheme], and_(db.Word.corpus=="Japanese_MiiPro"))
        s_jap_miy = select([db.Morpheme], and_(db.Word.corpus=="Japanese_Miyata"))
        s_seso = select([db.Morpheme], and_(db.Word.corpus=="Sesotho"))
        s_turk = select([db.Morpheme], and_(db.Word.corpus=="Turkish_KULLD"))
        s_yuc = select([db.Morpheme], and_(db.Word.corpus=="Yucatec"))
        result_cree = session.execute(s_cree)
        result_inuk = session.execute(s_inuk)
        result_jap_mii = session.execute(s_jap_mii)
        result_jap_miy = session.execute(s_jap_miy)
        result_seso = session.execute(s_seso)
        result_turk = session.execute(s_turk)
        result_yuc = session.execute(s_yuc)
        
        self.assertEqual(str(result_cree.fetchall()), "[(1, 'Cree', 'u700', 'Cree', 'Cree', 'target', 'ˈmin', 'again', 'again', 'p,quant', None), (2, 'Cree', 'u700', 'Cree', 'Cree', 'target', 'ˈɡa', 'also', 'also', 'p,conj', None), (3, 'Cree', 'u700', 'Cree', 'Cree', 'target', 'ə̃ˈhə̃', 'yes', 'yes', 'p,aff', None), (4, 'Cree', 'u701', 'Cree', 'Cree', 'target', 'ˈɡa', 'also', 'also', 'p,conj', None), (5, 'Cree', 'u705', 'Cree', 'Cree', 'target', 'ˈmin', 'again', 'again', 'p,quant', None), (6, 'Cree', 'u705', 'Cree', 'Cree', 'target', 'ˈɡa', 'also', 'also', 'p,conj', None), (7, 'Cree', 'u707', 'Cree', 'Cree', 'target', 'ˈmaw', 'here.it.is', 'here.it.is', 'p,dem', None), (8, 'Cree', 'u706', 'Cree', 'Cree', 'target', 'tʰu', 'two', 'two', 'Eng', None), (9, 'Cree', 'u703', 'Cree', 'Cree', 'target', 'ˈtʰivi', 'tv', 'tv', 'Eng', None)]")
        self.assertEqual(str(result_inuk.fetchall()), "[(10, 'Inuktitut', 'u705', 'Inuktitut', 'Inuktitut', 'actual', 'tagga', 'there_it_is', 'there_it_is', 'DEM', None), (11, 'Inuktitut', 'u705', 'Inuktitut', 'Inuktitut', 'actual', 'tagga', 'there_it_is', 'there_it_is', 'DEM', None), (12, 'Inuktitut', 'u705', 'Inuktitut', 'Inuktitut', 'actual', 'tagga', 'there_it_is', 'there_it_is', 'DEM', None), (13, 'Inuktitut', 'u706', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (14, 'Inuktitut', 'u706', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (15, 'Inuktitut', 'u707', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (16, 'Inuktitut', 'u707', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (17, 'Inuktitut', 'u703', 'Inuktitut', 'Inuktitut', 'actual', 'vunga', 'IND_1sS', 'IND1.1SG.S', 'VI', None), (18, 'Inuktitut', 'u703', 'Inuktitut', 'Inuktitut', 'actual', 'vunga', 'IND_1sS', 'IND1.1SG.S', 'VI', None), (19, 'Inuktitut', 'u703', 'Inuktitut', 'Inuktitut', 'actual', 'vunga', 'IND_1sS', 'IND1.1SG.S', 'VI', None), (20, 'Inuktitut', 'u704', 'Inuktitut', 'Inuktitut', 'actual', 'u', 'here.SG_ST', 'here.STAT.SG', 'DR', None), (21, 'Inuktitut', 'u704', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (22, 'Inuktitut', 'u704', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (23, 'Inuktitut', 'u713', 'Inuktitut', 'Inuktitut', 'actual', 'nauk', 'where', 'where', 'WH', None), (24, 'Inuktitut', 'u713', 'Inuktitut', 'Inuktitut', 'actual', '???', '???', '???', '???', None), (25, 'Inuktitut', 'u715', 'Inuktitut', 'Inuktitut', 'actual', 'uvanga', '1_SG_ABS_ERG', '1SG', 'PRO', None), (26, 'Inuktitut', 'u716', 'Inuktitut', 'Inuktitut', 'actual', '???', '???', '???', '???', None), (27, 'Inuktitut', 'u717', 'Inuktitut', 'Inuktitut', 'actual', 'anngat', 'ABL', 'ABL', 'LI', None), (28, 'Inuktitut', 'u717', 'Inuktitut', 'Inuktitut', 'actual', 'anngat', 'ABL', 'ABL', 'LI', None), (29, 'Inuktitut', 'u717', 'Inuktitut', 'Inuktitut', 'actual', 'anngat', 'ABL', 'ABL', 'LI', None), (30, 'Inuktitut', 'u718', 'Inuktitut', 'Inuktitut', 'actual', 'mik', 'MOD_SG', 'INSTR.SG', 'NI', None), (31, 'Inuktitut', 'u718', 'Inuktitut', 'Inuktitut', 'actual', 'mik', 'MOD_SG', 'INSTR.SG', 'NI', None), (32, 'Inuktitut', 'u718', 'Inuktitut', 'Inuktitut', 'actual', 'mik', 'MOD_SG', 'INSTR.SG', 'NI', None), (33, 'Inuktitut', 'u718', 'Inuktitut', 'Inuktitut', 'actual', 'mik', 'MOD_SG', 'INSTR.SG', 'NI', None), (34, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'ai', 'greetings', 'greetings', 'IACT', None), (35, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'ai', 'greetings', 'greetings', 'IACT', None), (36, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'ai', 'greetings', 'greetings', 'IACT', None), (37, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'vait', 'IND_2sS_3sO', 'IND1.2SG>3SG', 'VI', None), (38, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'vait', 'IND_2sS_3sO', 'IND1.2SG>3SG', 'VI', None), (39, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'git', 'IMP_2sS', 'IMP.2SG.S', 'VI', None), (40, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'git', 'IMP_2sS', 'IMP.2SG.S', 'VI', None), (41, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'hai', 'AFF', 'ATTN', 'EXCL', None), (42, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (43, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (44, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'git', 'IMP_2sS', 'IMP.2SG.S', 'VI', None), (45, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'git', 'IMP_2sS', 'IMP.2SG.S', 'VI', None), (46, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'mae', 'mae', 'mae', 'NR.PROP', None), (47, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'hai', 'AFF', 'ATTN', 'EXCL', None), (48, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'git', 'IMP_2sS', 'IMP.2SG.S', 'VI', None), (49, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'git', 'IMP_2sS', 'IMP.2SG.S', 'VI', None), (50, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (51, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (52, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (53, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'hai', 'AFF', 'ATTN', 'EXCL', None), (54, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (55, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'hai', 'AFF', 'ATTN', 'EXCL', None), (56, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (57, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (58, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'imaak', 'like_this', 'like_this', 'ADV', None), (59, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'li', 'and', 'and', 'CONJ', None), (60, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'li', 'and', 'and', 'CONJ', None), (61, 'Inuktitut', 'u719', 'Inuktitut', 'Inuktitut', 'actual', 'li', 'and', 'and', 'CONJ', None), (62, 'Inuktitut', 'u720', 'Inuktitut', 'Inuktitut', 'actual', 'no', 'no', 'no', 'IACT', None), (63, 'Inuktitut', 'u720', 'Inuktitut', 'Inuktitut', 'actual', 'no', 'no', 'no', 'IACT', None), (64, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'actual', 'nnga', 'IMP_2sS_1sO', 'IMP.2SG>1SG', 'VI', None), (65, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'actual', 'nnga', 'IMP_2sS_1sO', 'IMP.2SG>1SG', 'VI', None), (66, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'actual', 'nnga', 'IMP_2sS_1sO', 'IMP.2SG>1SG', 'VI', None), (67, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'actual', 'nnga', 'IMP_2sS_1sO', 'IMP.2SG>1SG', 'VI', None), (68, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'actual', 'nnga', 'IMP_2sS_1sO', 'IMP.2SG>1SG', 'VI', None), (69, 'Inuktitut', 'u721', 'Inuktitut', 'Inuktitut', 'actual', 'nnga', 'IMP_2sS_1sO', 'IMP.2SG>1SG', 'VI', None), (70, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'lugu', 'ICM_XxS_3sO', 'CONTEMP.FUT.3SG.O', 'VI', None), (71, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'lugu', 'ICM_XxS_3sO', 'CONTEMP.FUT.3SG.O', 'VI', None), (72, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'lugu', 'ICM_XxS_3sO', 'CONTEMP.FUT.3SG.O', 'VI', None), (73, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'lugu', 'ICM_XxS_3sO', 'CONTEMP.FUT.3SG.O', 'VI', None), (74, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'aluk', 'EMPH', 'EMPH', 'NN.AUG', None), (75, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'aluk', 'EMPH', 'EMPH', 'NN.AUG', None), (76, 'Inuktitut', 'u722', 'Inuktitut', 'Inuktitut', 'actual', 'aluk', 'EMPH', 'EMPH', 'NN.AUG', None), (77, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (78, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'actual', 'na', 'ABS_SG', 'ABS.SG', 'DI', None), (79, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'actual', 'juq', 'PAR_3sS', 'IND2.3SG.S', 'VI', None), (80, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'actual', 'juq', 'PAR_3sS', 'IND2.3SG.S', 'VI', None), (81, 'Inuktitut', 'u152', 'Inuktitut', 'Inuktitut', 'actual', 'juq', 'PAR_3sS', 'IND2.3SG.S', 'VI', None), (82, 'Inuktitut', 'u171', 'Inuktitut', 'Inuktitut', 'actual', 'ajursit', 'be_stuck', 'be_stuck', 'VR', None), (83, 'Inuktitut', 'u171', 'Inuktitut', 'Inuktitut', 'actual', 'gatta', 'CSV_1pS', 'CAUSAL.1PL.S', 'VI', None), (84, 'Inuktitut', 'u171', 'Inuktitut', 'Inuktitut', 'actual', 'gatta', 'CSV_1pS', 'CAUSAL.1PL.S', 'VI', None), (85, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None), (86, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None), (87, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None), (88, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None), (89, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None), (90, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None), (91, 'Inuktitut', 'u109', 'Inuktitut', 'Inuktitut', 'actual', 'canada', 'canada', 'canada', 'NR.PROP', None)]")
        self.assertEqual(str(result_jap_mii.fetchall()), "[(136, 'Japanese_MiiPro', 'u1776', 'Japanese_MiiPro', 'Japanese', 'actual', 'nyan', '???', '???', 'onoma', None), (137, 'Japanese_MiiPro', 'u1777', 'Japanese_MiiPro', 'Japanese', 'actual', 'yoisho', '???', '???', 'co:i', None), (138, 'Japanese_MiiPro', 'u1778', 'Japanese_MiiPro', 'Japanese', 'actual', 'nyan', '???', '???', 'onoma', None), (139, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None), (140, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None), (141, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'actual', 'nyaanya', '???', '???', 'n:mot', None), (142, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'actual', 'da.PRES', '???', '???', 'v:cop', None), (143, 'Japanese_MiiPro', 'u1779', 'Japanese_MiiPro', 'Japanese', 'actual', 'ne', '???', '???', 'ptl:fina', None), (144, 'Japanese_MiiPro', 'u1780', 'Japanese_MiiPro', 'Japanese', 'actual', 'nyan', '???', '???', 'onoma', None), (145, 'Japanese_MiiPro', 'u1781', 'Japanese_MiiPro', 'Japanese', 'actual', 'hai', '???', '???', 'co:i', None), (146, 'Japanese_MiiPro', 'u1781', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'SGER', 'NMLZ', 'sfx', None), (147, 'Japanese_MiiPro', 'u1781', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'SGER', 'NMLZ', 'sfx', None), (148, 'Japanese_MiiPro', 'u1781', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'SGER', 'NMLZ', 'sfx', None), (149, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', 'mina', '???', '???', 'n:deic:prs', None), (150, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PAST', 'PST', 'sfx', None), (151, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PAST', 'PST', 'sfx', None), (152, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', 'no', '???', '???', 'ptl:fina', None), (153, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (154, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (155, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (156, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (157, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (158, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (159, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (160, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (161, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (162, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (163, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (164, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (165, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (166, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (167, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (168, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (169, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (170, 'Japanese_MiiPro', 'u1784', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'chan', 'chan', 'sfx', None), (171, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'actual', 'un', '???', '???', 'co:i', None), (172, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'actual', 'soo', '???', '???', 'co:i', None), (173, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'actual', 'soo', '???', '???', 'co:i', None), (174, 'Japanese_MiiPro', 'u1782', 'Japanese_MiiPro', 'Japanese', 'actual', 'soo', '???', '???', 'co:i', None), (175, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'actual', 'kuso', '???', '???', 'n', None), (176, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'actual', 'kuso', '???', '???', 'n', None), (177, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'actual', 'kuso', '???', '???', 'n', None), (178, 'Japanese_MiiPro', 'u1783', 'Japanese_MiiPro', 'Japanese', 'actual', 'hetappi', '???', '???', 'n', None), (179, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', 'kotchi', '???', '???', 'n:deic:dem', None), (180, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', 'no', '???', '???', 'ptl:case', None), (181, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', 'wa', '???', '???', 'ptl:top', None), (182, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', 'moo', '???', '???', 'adv', None), (183, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'kai', 'kai', 'sfx', None), (184, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'kai', 'kai', 'sfx', None), (185, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (186, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (187, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None), (188, 'Japanese_MiiPro', 'u1785', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None), (189, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'actual', 'dakara', '???', '???', 'conj', None), (190, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'actual', 'chotto', '???', '???', 'adv', None), (191, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'actual', 'te', 'IMP', 'IMP', 'sfx', None), (192, 'Japanese_MiiPro', 'u189', 'Japanese_MiiPro', 'Japanese', 'actual', 'te', 'IMP', 'IMP', 'sfx', None), (193, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'actual', 'Akko', '???', '???', 'n:prop', None), (194, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (195, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (196, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'actual', 'te', 'IMP', 'IMP', 'sfx', None), (197, 'Japanese_MiiPro', 'u23', 'Japanese_MiiPro', 'Japanese', 'actual', 'te', 'IMP', 'IMP', 'sfx', None), (198, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'kore', '???', '???', 'n:deic:dem', None), (199, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'chotto', '???', '???', 'adv', None), (200, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'kore', '???', '???', 'n:deic:dem', None), (201, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'kore', '???', '???', 'n:deic:dem', None), (202, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'kore', '???', '???', 'n:deic:dem', None), (203, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'kore', '???', '???', 'n:deic:dem', None), (204, 'Japanese_MiiPro', 'u32', 'Japanese_MiiPro', 'Japanese', 'actual', 'n', '???', '???', 'co:i', None), (205, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'actual', 'dakara', '???', '???', 'conj', None), (206, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'actual', 'ano', '???', '???', 'adn:deic:dem', None), (207, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'actual', 'reji', '???', '???', 'n', None), (208, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'actual', 'wa', '???', '???', 'ptl:top', None), (209, 'Japanese_MiiPro', 'u255', 'Japanese_MiiPro', 'Japanese', 'actual', 'atchi', '???', '???', 'n:deic:dem', None), (210, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', 'aq', '???', '???', 'co:i', None), (211, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', 'shooboosha', '???', '???', 'n', None), (212, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (213, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (214, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (215, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'CONN', 'CVB', 'sfx', None), (216, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None), (217, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None), (218, 'Japanese_MiiPro', 'u287', 'Japanese_MiiPro', 'Japanese', 'actual', '???', 'PRES', 'PRS', 'sfx', None)]")
        self.assertEqual(str(result_jap_miy.fetchall()), "[(92, 'Japanese_Miyata', 'u1085', 'Japanese_Miyata', 'Japanese', 'target', '???', 'san', 'san', 'sfx', None), (93, 'Japanese_Miyata', 'u1085', 'Japanese_Miyata', 'Japanese', 'target', '???', 'san', 'san', 'sfx', None), (94, 'Japanese_Miyata', 'u1085', 'Japanese_Miyata', 'Japanese', 'target', '???', 'kun', 'kun', 'sfx', None), (95, 'Japanese_Miyata', 'u1085', 'Japanese_Miyata', 'Japanese', 'target', '???', 'kun', 'kun', 'sfx', None), (96, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'target', 'ki=iro', 'yellow_color', 'yellow_color', 'n', None), (97, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'target', 'mo', 'too', 'too', 'ptl.foc', None), (98, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PAST', 'PST', 'sfx', None), (99, 'Japanese_Miyata', 'u1086', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PAST', 'PST', 'sfx', None), (100, 'Japanese_Miyata', 'u1088', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (101, 'Japanese_Miyata', 'u1088', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (102, 'Japanese_Miyata', 'u1089', 'Japanese_Miyata', 'Japanese', 'target', 'oi', 'hey', 'hey', 'co.i', None), (103, 'Japanese_Miyata', 'u1090', 'Japanese_Miyata', 'Japanese', 'target', 'mugi=cha', 'barley_tea', 'barley_tea', 'n', None), (104, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'target', '???', 'COND', 'COND', 'sfx', None), (105, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'target', '???', 'COND', 'COND', 'sfx', None), (106, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'target', '???', 'COND', 'COND', 'sfx', None), (107, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'target', 'ato', 'after', 'after', 'n', None), (108, 'Japanese_Miyata', 'u1091', 'Japanese_Miyata', 'Japanese', 'target', 'choodai', 'give_me.IMP', 'give_me.IMP', 'v.ir', None), (109, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', 'kore', 'this', 'this', 'n.deic.dem', None), (110, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', 'wa', 'TOP', 'TOP', 'ptl.top', None), (111, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', 'dooiu', 'what_kind', 'what_kind', 'adn.deic.wh', None), (112, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', 'fuu', 'manner', 'manner', 'n.fml', None), (113, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', 'ni', 'be.ADV', 'be.ADV', 'v.cop', None), (114, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (115, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (116, 'Japanese_Miyata', 'u1093', 'Japanese_Miyata', 'Japanese', 'target', 'no', 'FINA', 'PRAG', 'ptl.fina', None), (117, 'Japanese_Miyata', 'u1087', 'Japanese_Miyata', 'Japanese', 'target', 'nainai', 'allgone', 'allgone', 'n.vn.mot', None), (118, 'Japanese_Miyata', 'u1092', 'Japanese_Miyata', 'Japanese', 'target', 'bakari', 'almost', 'almost', 'ptl.foc', None), (119, 'Japanese_Miyata', 'u1092', 'Japanese_Miyata', 'Japanese', 'target', 'bakari', 'almost', 'almost', 'ptl.foc', None), (120, 'Japanese_Miyata', 'u1092', 'Japanese_Miyata', 'Japanese', 'target', 'bakari', 'almost', 'almost', 'ptl.foc', None), (121, 'Japanese_Miyata', 'u1094', 'Japanese_Miyata', 'Japanese', 'target', 'bakku', 'back', 'back', 'n.vn', None), (122, 'Japanese_Miyata', 'u1094', 'Japanese_Miyata', 'Japanese', 'target', 'bakku', 'back', 'back', 'n.vn', None), (123, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'target', '???', 'HORT', 'HORT', 'sfx', None), (124, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'target', '???', 'HORT', 'HORT', 'sfx', None), (125, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'target', 'ka', 'Q', 'Q', 'ptl.fina', None), (126, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'target', 'koko', 'here', 'here', 'n.deic.dem', None), (127, 'Japanese_Miyata', 'u63', 'Japanese_Miyata', 'Japanese', 'target', 'kara', 'from', 'from', 'ptl.post', None), (128, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'target', '???', 'san', 'san', 'sfx', None), (129, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'target', '???', 'san', 'san', 'sfx', None), (130, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'target', 'no', 'GEN', 'GEN', 'ptl.attr', None), (131, 'Japanese_Miyata', 'u230', 'Japanese_Miyata', 'Japanese', 'target', 'mitai', 'looks_like', 'looks_like', 'smod', None), (132, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (133, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (134, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'target', '???', 'PRES', 'PRS', 'sfx', None), (135, 'Japanese_Miyata', 'u313', 'Japanese_Miyata', 'Japanese', 'target', 'no', 'FINA', 'PRAG', 'ptl.fina', None)]")
        self.assertEqual(str(result_seso.fetchall()), "[(219, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'ke', 'cp', 'COP', 'cop', None), (220, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'Tsebo', 'a_name', 'a_name', '???', None), (221, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (222, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (223, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (224, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (225, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (226, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (227, 'Sesotho', 'u381', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (228, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'hla', 'day(3,4)', 'day(3,4)', 'n', None), (229, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'hla', 'day(3,4)', 'day(3,4)', 'n', None), (230, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'wane', '3', '3', 'd', None), (231, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'oo', '3', '3', 'obr', None), (232, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'khweshepe', 'rough_one(5,6)', 'rough_one(5,6)', 'n', None), (233, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'khweshepe', 'rough_one(5,6)', 'rough_one(5,6)', 'n', None), (234, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'le', 'cp', 'COP', 'pfx', None), (235, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'le', 'cp', 'COP', 'pfx', None), (236, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'teng', 'loc', 'loc', 'loc', None), (237, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'ka', 'pr', 'PREP', 'pr', None), (238, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'ng', 'lc', 'LOC', 'sfx', None), (239, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'ng', 'lc', 'LOC', 'sfx', None), (240, 'Sesotho', 'u382', 'Sesotho', 'Sesotho', 'actual', 'ng', 'lc', 'LOC', 'sfx', None), (241, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'ke', 'cp', 'COP', 'cop', None), (242, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'Tsebo', 'a_name', 'a_name', '???', None), (243, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (244, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (245, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (246, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (247, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (248, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (249, 'Sesotho', 'u383', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (250, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'pfx', None), (251, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'pfx', None), (252, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'pfx', None), (253, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'teng', 'loc', 'loc', 'loc', None), (254, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'ha', 'ng', 'NEG', 'ng', None), (255, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (256, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (257, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (258, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (259, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (260, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (261, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (262, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (263, 'Sesotho', 'u384', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^pt', 'SBJV2', 'sfx', None), (264, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'actual', 'bo', 'ij', 'INTJ', 'ij', None), (265, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'actual', 'butle', 'ij', 'INTJ', 'ij', None), (266, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'actual', 'Lineo', 'a_name', 'a_name', '???', None), (267, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^s', 'SBJV', 'sfx', None), (268, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^s', 'SBJV', 'sfx', None), (269, 'Sesotho', 'u385', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^s', 'SBJV', 'sfx', None), (270, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (271, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (272, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (273, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (274, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'wane', '3', '3', 'd', None), (275, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'wa', '3', '3', 'ps', None), (276, 'Sesotho', 'u386', 'Sesotho', 'Sesotho', 'actual', 'nkhono', 'grandmother(1a,2a)', 'grandmother(1a,2a)', 'n', None), (277, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'jwale', 'av', 'ADV', 'av', None), (278, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'ha', 'ng', 'NEG', 'ng', None), (279, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (280, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (281, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (282, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^x', 'NEG', 'sfx', None), (283, 'Sesotho', 'u387', 'Sesotho', 'Sesotho', 'actual', 'tjee', 'av', 'ADV', 'av', None), (284, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ebile', 'cj', 'CONJ', 'cj', None), (285, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^in', 'm^in', 'sfx', None), (286, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^in', 'm^in', 'sfx', None), (287, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^in', 'm^in', 'sfx', None), (288, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'e', 'm^in', 'm^in', 'sfx', None), (289, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'eo', '9', '9', 'or', None), (290, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ng', 'rl', 'REL.LOC', 'sfx', None), (291, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ng', 'rl', 'REL.LOC', 'sfx', None), (292, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ng', 'rl', 'REL.LOC', 'sfx', None), (293, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ng', 'rl', 'REL.LOC', 'sfx', None), (294, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ng', 'rl', 'REL.LOC', 'sfx', None), (295, 'Sesotho', 'u388', 'Sesotho', 'Sesotho', 'actual', 'ng', 'rl', 'REL.LOC', 'sfx', None), (296, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'lakaladi', 'edible_bulb(3,4)', 'edible_bulb(3,4)', 'n', None), (297, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'lakaladi', 'edible_bulb(3,4)', 'edible_bulb(3,4)', 'n', None), (298, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'ha', 'cd', 'cd', 'cd', None), (299, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'o', 'sm3', 'III.S', 'afx.detached', None), (300, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'ngata', 'aj', 'aj', 'aj', None), (301, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'ngata', 'aj', 'aj', 'aj', None), (302, 'Sesotho', 'u390', 'Sesotho', 'Sesotho', 'actual', 'lekhale', 'av', 'ADV', 'av', None), (303, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'le', 'cj', 'CONJ', 'cj', None), (304, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'nna', '1s', '1SG', 'pn', None), (305, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (306, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (307, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (308, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (309, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (310, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'a', 'm^in', 'm^in', 'sfx', None), (311, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'tsiki', '???', '???', 'none', None), (312, 'Sesotho', 'u389', 'Sesotho', 'Sesotho', 'actual', 'tsiki', '???', '???', 'none', None), (313, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'actual', 'mme', 'mother(1a,2a)', 'mother(1a,2a)', 'n', None), (314, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'actual', 'Machaka', 'a_name', 'a_name', '???', None), (315, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'actual', 'o', 'cp1', 'I.COP', 'cop', None), (316, 'Sesotho', 'u41', 'Sesotho', 'Sesotho', 'actual', 'kae', 'wh', 'WH.Q', 'wh', None)]")
        self.assertEqual(str(result_turk.fetchall()), "[(317, 'Turkish', 'u1925', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'OPT&1P', 'OPT&1P', 'sfx', None), (318, 'Turkish', 'u1925', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'OPT&1P', 'OPT&1P', 'sfx', None), (319, 'Turkish', 'u1929', 'Turkish_KULLD', 'Turkish', 'actual', 'tek', '???', '???', 'ADJ', None), (320, 'Turkish', 'u1929', 'Turkish_KULLD', 'Turkish', 'actual', 'var', '???', '???', 'EXIST', None), (321, 'Turkish', 'u1933', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'PAST', 'PAST', 'sfx', None), (322, 'Turkish', 'u1933', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'PAST', 'PAST', 'sfx', None), (323, 'Turkish', 'u1933', 'Turkish_KULLD', 'Turkish', 'actual', 'Necla', '???', '???', 'N:PROP', None), (324, 'Turkish', 'u1934', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'PAST', 'PAST', 'sfx', None), (325, 'Turkish', 'u1934', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'PAST', 'PAST', 'sfx', None), (326, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'actual', 'gel', '???', '???', 'V', None), (327, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'actual', 'sen', '???', '???', 'PRO', None), (328, 'Turkish', 'u1935', 'Turkish_KULLD', 'Turkish', 'actual', 'gel', '???', '???', 'V', None), (329, 'Turkish', 'u1926', 'Turkish_KULLD', 'Turkish', 'actual', 'tane', '???', '???', 'N', None), (330, 'Turkish', 'u1926', 'Turkish_KULLD', 'Turkish', 'actual', 'daha', '???', '???', 'ADV', None), (331, 'Turkish', 'u1927', 'Turkish_KULLD', 'Turkish', 'actual', 'tane', '???', '???', 'N', None), (332, 'Turkish', 'u1927', 'Turkish_KULLD', 'Turkish', 'actual', 'daha', '???', '???', 'ADV', None), (333, 'Turkish', 'u1931', 'Turkish_KULLD', 'Turkish', 'actual', 'tane', '???', '???', 'N', None), (334, 'Turkish', 'u1931', 'Turkish_KULLD', 'Turkish', 'actual', 'daha', '???', '???', 'ADV', None), (335, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'actual', 'tane', '???', '???', 'N', None), (336, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'actual', 'minder', '???', '???', 'N', None), (337, 'Turkish', 'u1928', 'Turkish_KULLD', 'Turkish', 'actual', 'yok', '???', '???', 'EXIST', None), (338, 'Turkish', 'u1930', 'Turkish_KULLD', 'Turkish', 'actual', 'de', '???', '???', 'CONJ', None), (339, 'Turkish', 'u1930', 'Turkish_KULLD', 'Turkish', 'actual', 'var', '???', '???', 'EXIST', None), (340, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'actual', 'tane', '???', '???', 'N', None), (341, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'PAST', 'PAST', 'sfx', None), (342, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'PAST', 'PAST', 'sfx', None), (343, 'Turkish', 'u1932', 'Turkish_KULLD', 'Turkish', 'actual', 'yok', '???', '???', 'EXIST', None), (344, 'Turkish', 'u296', 'Turkish_KULLD', 'Turkish', 'actual', 'bayağı', '???', '???', 'ADV', None), (345, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'GER:INCE', 'GER:INCE', 'sfx', None), (346, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'actual', '???', 'GER:INCE', 'GER:INCE', 'sfx', None), (347, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'actual', '???', '1P', '1P', 'sfx', None), (348, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'actual', '???', '1P', '1P', 'sfx', None), (349, 'Turkish', 'u603', 'Turkish_KULLD', 'Turkish', 'actual', '???', '1P', '1P', 'sfx', None)]")
        self.assertEqual(str(result_yuc.fetchall()), "[(350, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', '0', 'IMP', 'IMP', 'sfx', None), (351, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', '0', 'IMP', 'IMP', 'sfx', None), (352, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', 'pool', '???', '???', 'S', None), (353, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', 'pool', '???', '???', 'S', None), (354, 'Yucatec', 'u1', 'Yucatec', 'Yucatec', 'target', 'pool', '???', '???', 'S', None), (355, 'Yucatec', 'u2', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (356, 'Yucatec', 'u2', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (357, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (358, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (359, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ah', 'PFV', 'PFV', 'sfx', None), (360, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ah', 'PFV', 'PFV', 'sfx', None), (361, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ah', 'PFV', 'PFV', 'sfx', None), (362, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ah', 'PFV', 'PFV', 'sfx', None), (363, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (364, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (365, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (366, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', '???', 'POS-el', 'POS-el', 'sfx', None), (367, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', '???', 'POS-el', 'POS-el', 'sfx', None), (368, 'Yucatec', 'u3', 'Yucatec', 'Yucatec', 'target', '???', 'POS-el', 'POS-el', 'sfx', None), (369, 'Yucatec', 'u4', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (370, 'Yucatec', 'u4', 'Yucatec', 'Yucatec', 'target', 'ich', '???', '???', 'S', None), (371, 'Yucatec', 'u4', 'Yucatec', 'Yucatec', 'target', 'xáacheʔ', '???', '???', 'S', None), (372, 'Yucatec', 'u5', 'Yucatec', 'Yucatec', 'target', 'el', 'POS', 'POSS', 'sfx', None), (373, 'Yucatec', 'u5', 'Yucatec', 'Yucatec', 'target', 'el', 'POS', 'POSS', 'sfx', None), (374, 'Yucatec', 'u5', 'Yucatec', 'Yucatec', 'target', 'el', 'POS', 'POSS', 'sfx', None), (375, 'Yucatec', 'u5', 'Yucatec', 'Yucatec', 'target', 'xáacheʔ', '???', '???', 'S', None), (376, 'Yucatec', 'u6', 'Yucatec', 'Yucatec', 'target', 'xáacheʔ', '???', '???', 'S', None), (377, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'xáacheʔ', '???', '???', 'S', None), (378, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'chʔik', '???', '???', 'VT', None), (379, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'teʔ', '???', '???', 'DEICT', None), (380, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'tiʔ', '???', '???', 'PREP', None), (381, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'oʔ', 'DIST', 'DIST', 'sfx', None), (382, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'oʔ', 'DIST', 'DIST', 'sfx', None), (383, 'Yucatec', 'u7', 'Yucatec', 'Yucatec', 'target', 'oʔ', 'DIST', 'DIST', 'sfx', None), (384, 'Yucatec', 'u8', 'Yucatec', 'Yucatec', 'target', 'chʔik', '???', '???', 'VT', None), (385, 'Yucatec', 'u9', 'Yucatec', 'Yucatec', 'target', 'tiʔ', '???', '???', 'PREP', None), (386, 'Yucatec', 'u9', 'Yucatec', 'Yucatec', 'target', 'bolsa', '???', '???', 'S', None), (387, 'Yucatec', 'u9', 'Yucatec', 'Yucatec', 'target', 'bolsa', '???', '???', 'S', None), (388, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', 'target', 'yan', 'OBLIG', 'OBLIG', '???', None), (389, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', 'target', 'ik', 'IMPF', 'IPFV', 'sfx', None), (390, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', 'target', 'ik', 'IMPF', 'IPFV', 'sfx', None), (391, 'Yucatec', 'u24', 'Yucatec', 'Yucatec', 'target', 'ik', 'IMPF', 'IPFV', 'sfx', None), (392, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', 'le', '???', '???', 'DET', None), (393, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', 'oʔ', 'DIST', 'DIST', 'sfx', None), (394, 'Yucatec', 'u0', 'Yucatec', 'Yucatec', 'target', 'oʔ', 'DIST', 'DIST', 'sfx', None)]")
        session.close()

    def testXMLSpeakers(self):
        """
        Test if all speakers for XML test files are loaded
        """
        session = make_session()
        self.assertEqual(session.query(db.Speaker).count(), 14)
        
        s_cree = select([db.Speaker], and_(db.Speaker.corpus == "Cree"))
        s_inuk = select([db.Speaker], and_(db.Speaker.corpus == "Inuktitut"))
        s_jap_mii = select([db.Speaker], and_(db.Speaker.corpus == "Japanese_MiiPro"))
        s_jap_miy = select([db.Speaker], and_(db.Speaker.corpus == "Japanese_Miyata"))
        s_seso = select([db.Speaker], and_(db.Speaker.corpus == "Sesotho"))
        s_turk = select([db.Speaker], and_(db.Speaker.corpus == "Turkish"))
        s_yuc = select([db.Speaker], and_(db.Speaker.corpus == "Yucatec"))
       
        result_cree = session.execute(s_cree)
        result_inuk = session.execute(s_inuk)
        result_jap_mii = session.execute(s_jap_mii)
        result_jap_miy = session.execute(s_jap_miy)
        result_seso = session.execute(s_seso)
        result_turk = session.execute(s_turk)
        result_yuc = session.execute(s_yuc)
        #print(result_indon.fetchall())
        self.assertEqual(str(result_cree.fetchall()), "[(1, 'Cree', 'Cree', 'Cree', 'CHI', 'Ani', 'P2Y1M14D', '2;1.14', 774, 'female', 'Female', 'Target_Child', 'Target_Child', 'Target_Child', None, '2003-01-24'), (2, 'Cree', 'Cree', 'Cree', 'DAN', 'Daniel', 'P3Y7M19D', '3;7.19', 1324, 'male', 'Male', 'Brother', 'Brother', 'Child', None, None)]")
        self.assertEqual(str(result_cree.fetchall()), "[(3, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'ALI', 'Alec', 'P2Y6M6D', '2;6.6', 916, 'male', 'Male', 'Target_Child', 'Target_Child', 'Target_Child', 'ike', '1986-08-25'), (4, 'Inuktitut', 'Inuktitut', 'Inuktitut', 'DAN', 'Daniel', 'P3Y7M19D', '3;7.19', 1324, 'male', 'Male', 'Brother', 'Brother', 'Child', 'ike', None)]")
        self.assertEqual(str(result_cree.fetchall()), "[(7, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'ALS', 'Asatokun', 'P3Y0M1D', '3;0.1', 1096, 'male', 'Male', 'Target_Child', 'Target_Child', 'Target_Child', 'jpn', None), (8, 'Japanese_MiiPro', 'Japanese_MiiPro', 'Japanese', 'MOT', None, None, None, None, 'female', 'Female', 'Mother', 'Mother', 'Adult', 'jpn', None)]")
        self.assertEqual(str(result_cree.fetchall()), "[(5, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'CHI', 'Akifumi', 'P1Y5M7D', '1;5.7', 522, None, 'Unspecified', 'Target_Child', 'Target_Child', 'Target_Child', 'jpn', None), (6, 'Japanese_Miyata', 'Japanese_Miyata', 'Japanese', 'AMO', 'Okaasan', None, None, None, None, 'Unspecified', 'Mother', 'Mother', 'Adult', 'jpn', None)]")
        self.assertEqual(str(result_cree.fetchall()), "[(9, 'Sesotho', 'Sesotho', 'Sesotho', 'NTS', 'Ntselleng', None, None, None, None, 'Unspecified', 'Playmate', 'Playmate', 'Unknown', 'sme', None), (10, 'Sesotho', 'Sesotho', 'Sesotho', 'RPL', 'Rapelang', None, None, None, None, 'Unspecified', 'Playmate', 'Playmate', 'Unknown', 'sme', None)]")
        self.assertEqual(str(result_cree.fetchall()), "[(11, 'Turkish', 'Turkish_KULLD', 'Turkish', 'CHI', 'Burcu', 'P0Y8M2D', '0;8.2', 242, 'female', 'Female', 'Target_Child', 'Target_Child', 'Target_Child', 'tur', None), (12, 'Turkish', 'Turkish_KULLD', 'Turkish', 'MOT', 'Gülcan', 'P25Y', '25;0.0', 9125, 'female', 'Female', 'Mother', 'Mother', 'Adult', 'tur', None)]")
        self.assertEqual(str(result_cree.fetchall()), "[(13, 'Yucatec', 'Yucatec', 'Yucatec', 'ARM', None, None, None, None, None, 'Unspecified', 'Target_Child', 'Target_Child', 'Target_Child', 'yua', None), (14, 'Yucatec', 'Yucatec', 'Yucatec', 'SAN', None, None, None, None, None, 'Unspecified', 'Child', 'Child', 'Child', 'yua', None)]")
        session.close()
        
    def textXMLUniquespeakers(self):
        """
        Test if all unique speakers for XML test files are loaded
        """
        session = make_session()
        self.assertEqual(session.query(db.Uniquespeakers).count(),13)
        
        s_cree = select([db.Uniquespeaker], and_(db.Uniquespeakers.language == "Cree"))
        s_inuk = select([db.Uniquespeakers], and_(db.Uniquespeakers.language == "Inuktitut"))
        s_jap_mii = select([db.Uniquespeakers], and_(db.Uniquespeakers.language == "Japanese"))
        s_seso = select([db.Uniquespeakers], and_(db.Uniquespeakers.language == "Sesotho"))
        s_turk = select([db.Uniquespeakers], and_(db.Uniquespeakers.language == "Turkish"))
        s_yuc = select([db.Uniquespeakers], and_(db.Uniquespeakers.language == "Yucatec"))
       
        result_cree = session.execute(s_cree)
        result_inuk = session.execute(s_inuk)
        result_jap = session.execute(s_jap_mii)
        result_seso = session.execute(s_seso)
        result_turk = session.execute(s_turk)
        result_yuc = session.execute(s_yuc)
        
        self.assertEqual(str(result_cree.fetchall()), "[(1, 'CHI', 'Ani', '2003-01-24', 'Female', 'Cree', 'Target_Child'), (2, 'DAN', 'Daniel', None, 'Male', 'Cree', 'Child')]")
        self.assertEqual(str(result_inuk.fetchall()), "[(3, 'ALI', 'Alec', '1986-08-25', 'Male', 'Inuktitut', 'Target_Child')]")
        self.assertEqual(str(result_jap_mii.fetchall()), "[(4, 'CHI', 'Akifumi', None, 'Unspecified', 'Japanese', 'Target_Child'), (5, 'AMO', 'Okaasan', None, 'Unspecified', 'Japanese', 'Adult'), (6, 'ALS', 'Asatokun', None, 'Male', 'Japanese', 'Target_Child'), (7, 'MOT', None, None, 'Female', 'Japanese', 'Adult')]")
        self.assertEqual(str(result_seso.fetchall()), "[(8, 'NTS', 'Ntselleng', None, 'Unspecified', 'Sesotho', 'Unknown'), (9, 'RPL', 'Rapelang', None, 'Unspecified', 'Sesotho', 'Unknown')]")
        self.assertEqual(str(result_turk.fetchall()), "[(8, 'NTS', 'Ntselleng', None, 'Unspecified', 'Sesotho', 'Unknown'), (9, 'RPL', 'Rapelang', None, 'Unspecified', 'Sesotho', 'Unknown')]")
        self.assertEqual(str(result_yuc.fetchall()), "[(12, 'ARM', None, None, 'Unspecified', 'Yucatec', 'Target_Child'), (13, 'SAN', None, None, 'Unspecified', 'Yucatec', 'Child')]")
        
        session.close()
    
    
    
    
    
    
    

if __name__ == "__main__":
    current_dir = os.getcwd()
    sys.path.append(current_dir)

    import database_backend as db
    import processors as processors
    import unittest
    from sqlalchemy.orm import sessionmaker
    from sqlalchemy import func
    import parsers as parsers

